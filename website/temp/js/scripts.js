function initContactFormListener(){$("#contact-form .btn-site").on("click",function(){$("#contact-form").submit()}),$("#contact-form").submit(function(e){e.preventDefault(),console.log("Form submitted listener called");var s=$("#contact-form").find("input, textarea, select"),t={};s.each(function(){this.name&&("checkbox"==this.type||"radio"==this.type?this.checked&&(t[this.name]=this.value):t[this.name]=this.value)}),console.log("formValues : "+JSON.stringify(t)),$.ajax({url:"assets/php/handleajaxform.php",method:"POST",data:t,success:function(e){if(console.log("AJAX post result result : "+JSON.stringify(e)),$("div[data-error-id]").text(""),$("#contact-form input, #contact-form textarea").removeClass("form-error"),$("#send-result").text(""),Object.keys(e.errors).length>0)for(var s in e.errors)console.log("error in "+s+": "+e.errors[s]),$('div[data-error-id="'+s+'"]').text(e.errors[s]).hide().slideDown(),$('*[name="'+s+'"]').addClass("form-error"),$('*[name="'+s+'"]').animateCss("shake");else console.log("All validation passed succesfully!"),$("#send-result").text("Thank you. Your message has been sent."),$("#send-result").removeClass("alert-danger").addClass("alert-success"),$("#send-result").show().animateCss("bounceIn",function(){$("input").val(""),$("textarea").val(""),$("#send-result").delay(5e3).slideUp()})},error:function(){$("#send-result").removeClass("alert-success"),$("#send-result").addClass("alert-danger"),$("#send-result").text("Sorry... Your message could not have been delivered."),$("#send-result").slideDown()}})})}
function initContactMap(){var o=[{featureType:"all",elementType:"all",stylers:[{saturation:-100},{gamma:.5}]}],t=new google.maps.Map(document.getElementById("contact-map"),{center:myPosition,scrollwheel:!1,streetViewControl:!0,streetViewControl:{position:google.maps.ControlPosition.LEFT_BOTTOM},mapTypeControl:!0,mapTypeControlOptions:{position:google.maps.ControlPosition.BOTTOM_LEFT},zoomControl:!0,zoomControlOptions:{position:google.maps.ControlPosition.LEFT_CENTER},styles:o,zoom:14});myMap=t;new google.maps.Marker({map:t,position:myPosition,title:"Kamenictv√≠ Erben",icon:{url:"assets/images/IE_logo_rounded_pointer.png",scaledSize:new google.maps.Size(150,150)}});myMap.panBy(0,-$("nav.navbar").height())}var myMap,myPosition={lat:50.048822,lng:15.200242};
$(function(n){$(".loader-wrapper").hide();setInterval(function(){$(".btn-down").animateCss("bounce")},3e3);$.fn.extend({animateCss:function(n,e){return this.addClass("animated "+n).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){$(this).removeClass("animated "+n),$.isFunction(e)&&e()}),this}}),initCarousels=function(){console.log("carousels initialized");for(var n=[{carousel:"#main-carousel",interval:7e3,pause:"none"},{carousel:"#about-carousel",interval:5e3,pause:"none"},{carousel:"#carouselTombstones",interval:3e3,pause:"none"},{carousel:"#carouselGarden",interval:3e3,pause:"none"},{carousel:"#carouselRestorations",interval:3e3,pause:"none"},{carousel:"#CarouselMonuments",interval:3e3,pause:"none"}],e=0;e<n.length-1;e++)$(n[e].carousel).carousel({interval:n[e].interval})},n.initCarousels=initCarousels}(window));
!function(a,t){var n=["cz","en"],e=function(a){return new e.init(a)};e.prototype={getKeyVal:function(a){return self=this,function(){a=a.trim();for(var t,n=0;n<=e.data.length-1;n++){if(e.data[n].datatag===a)return t=e.data[n][self.activeLang];t=""}return t}()},switchLang:function(a){self=this;for(var n=t("[data-lang]").length,e=0;e<=n-1;e++){var i=t(t("[data-lang]")[e]).data("lang");value=LNG$(a).getKeyVal(i),""!==value.trim()&&(value.search("<ph>")>-1?(value=value.substr(4,value.length),t(t("[data-lang]")[e]).attr("placeholder",value)):t(t("[data-lang]")[e]).text(LNG$(a).getKeyVal(i)).animateCss("pulse"),t(t("[data-lang]")[e]).css("visibility","visible"))}}},e.init=function(a){this.activeLang=a||n[0]},e.init.prototype=e.prototype,a.Lang=a.LNG$=e,function(a,n){t.getJSON(a,function(){}).done(function(a){console.log("lang data loaded..."),n(a)}).fail(function(a,t,n){console.log("--- error ---"),console.log(a)}).always(function(){})}("./assets/data/lang.json",function(a){e.data=a;var n=t(".lang-switcher>span").text().trim();LNG$(n).switchLang(n)})}(window,jQuery);
$(function(n){function e(){function e(n,e,a){"function"!=typeof a&&(a=function(){}),$(e).append($("<script />",{src:n,async:!0,defer:!0})),a()}function i(n){"function"!=typeof n&&(n=function(){}),$("#ajax-container").show(),$("#ajax-content").hide(),$(".loader-wrapper").hide(),$("#ajax-content").show(),$("#ajax-content").fadeIn(500,function(){n()})}var c={};$cachedItems=$("#mainNavbar [data-menuitem]"),$($cachedItems).each(function(n,e){c[$(e).data("menuitem")]=""}),n.mySite.cachedPage=c,t(),o(!0),$("#mainNavbar").on("show.bs.collapse",function(){$(".hamburger__menu-icon").addClass("hamburger__menu-icon--close-x")}),$("#mainNavbar").on("hide.bs.collapse",function(){$(".hamburger__menu-icon").removeClass("hamburger__menu-icon--close-x")}),$(".nav-link").on("click",function(n){n.preventDefault();var t=this.href.trim().toLowerCase(),o=$(this).data("menuitem").trim().toLowerCase(),h=$(".lang-switcher>span").text().trim();$(this).siblings(".nav-link").removeClass("active"),$(this).addClass("active"),void 0!==s&&null!==s&&(s=s.destroy(!0)),$("#mainNavbar").collapse("hide"),$(".loader-wrapper").show(),$("#ajax-container").fadeOut(500,function(){$("body,html").stop().animate({scrollTop:0},"50"),$(this).remove(),""===mySite.cachedPage[o]?$("#ajax-content").load(t+" #ajax-container",function(n,t){"success"===t?(console.log("Loaded '"+o+"' from SERVER..."),i(function(){LNG$(h).switchLang(h)}),"realisations"===o?(c[o]=$(n).find("#ajax-container"),initCommisionsGallery(function(){LNG$(h).switchLang(h)})):"contact"===o?(c[o]=$(n).find("#ajax-container"),e("https://maps.googleapis.com/maps/api/js?key=AIzaSyA0qVKpndfcoIgP5nwuJxmH5q0v5TSvEc4&callback=initContactMap","body",function(){$(function(){$(window).load(function(){initContactMap(),initContactFormListener(),a()})})})):"main"===o?(c[o]=$(n).find("#ajax-container"),initCarousels(),r(),d||(s=new ScrollMagic.Controller({globalSceneOptions:{triggerHook:"onEnter",duration:"100%"}}),l=new ScrollMagic.Scene({triggerElement:"#parallax1"}).setTween("#parallax1 > div",{y:"50%",ease:Linear.easeNone}).addTo(s))):"about"===o?(c[o]=$(n).find("#ajax-container"),initCarousels(),d||(s=new ScrollMagic.Controller({globalSceneOptions:{triggerHook:"onEnter",duration:"100%"}}),m=new ScrollMagic.Scene({triggerElement:"#parallax2"}).setTween("#parallax2 > div",{y:"50%",ease:Linear.easeNone}).addTo(s))):"pricing"===o&&(c[o]=$(n).find("#ajax-container"),initPricingGallery(function(){LNG$(h).switchLang(h)}))):"error"===t&&($(".loader-wrapper").hide(),console.log("Error loading from server..."))}):(console.log("Loaded '"+o+"' from CACHE..."),$(mySite.cachedPage[o]).appendTo("#ajax-content"),i(function(){LNG$(h).switchLang(h)}))})})}function a(){$(".btn-map").on("click",function(n){n.preventDefault();var e=$(this);if(window.addEventListener("orientationchange",function(){e.children().hasClass("fa-expand")&&(window.matchMedia("(orientation: landscape)").matches&&window.innerWidth<767?$("#contact-map").animate({height:"75vh"},500,function(){google.maps.event.trigger(myMap,"resize"),myMap.setCenter(myPosition),myMap.panBy(0,-$("nav.navbar").height())}):$("#contact-map").animate({height:"50vh"},500,function(){google.maps.event.trigger(myMap,"resize"),myMap.setCenter(myPosition),myMap.panBy(0,-$("nav.navbar").height())}))},!1),e.children().hasClass("fa-expand"))return e.children().removeClass("fa-expand").addClass("fa-compress"),void $("#contact-map").animate({height:"100vh"},500,function(){google.maps.event.trigger(myMap,"resize"),myMap.setCenter(myPosition),myMap.panBy(0,-$("nav.navbar").height())});e.children().hasClass("fa-compress")&&(e.children().removeClass("fa-compress").addClass("fa-expand"),window.matchMedia("(orientation: landscape)").matches&&window.innerWidth<767?$("#contact-map").animate({height:"75vh"},500,function(){google.maps.event.trigger(myMap,"resize"),myMap.setCenter(myPosition),myMap.panBy(0,-$("nav.navbar").height())}):$("#contact-map").animate({height:"50vh"},500,function(){google.maps.event.trigger(myMap,"resize"),myMap.setCenter(myPosition),myMap.panBy(0,-$("nav.navbar").height())}))})}function t(){var n=0;$(window).on("scroll",function(){var e=$(window).height(),a=$(window).scrollTop();n=e/5,a<0&&(a=0),(e-n)/a>1?$(".btn-move-up").is(":visible")&&$(".btn-move-up").animateCss("bounceOut",function(){$(".btn-move-up").hide(),$(".btn-down").show().animateCss("bounceIn")}):$(".btn-move-up").is(":visible")||$(".btn-down").animateCss("bounceOut",function(){$(".btn-down").hide(),$(".btn-move-up").show(),$(".btn-move-up").animateCss("bounceIn")})}),$(".btn-move-up").on("click",function(){$("body,html").stop().animate({scrollTop:0},"700","swing")}),$(".btn-down").on("click",function(n){n.preventDefault();var e=n.currentTarget.hash,a=$(e).offset().top;$("body,html").stop().animate({scrollTop:a},"700","swing")})}function o(n){function e(n,e){"object"!=typeof n&&(n=n||[]),"string"!=typeof e&&(e=e||"");var a=!1;return-1===n.indexOf(i)?console.log("error: language: '"+e+"' within 'index.html' file is not compatible with languages defined."):a=!0,a}var n=n||!1,a=[],t={cz:!1,fr:!1,en:!0,de:!0,es:!1};$.each(t,function(n,e){e&&a.push(n)});var i=$(".lang-switcher>span").text().trim();n&&LNG$(i).switchLang(i),$(".lang-switcher>span").on("click",function(){var n=a.indexOf(i)+1;e(a,i)&&(n=n===a.length?0:n,i=a[n],$(".lang-switcher>span").text(i),LNG$(i).switchLang(i),$(this).animateCss("bounceIn"))})}function r(){$(".btn-site").on("click",function(n){n.preventDefault;var e=$(this).data("link").trim(),i=window.location.href;i.search("index.html")>=0?i=i.replace("index.html","realisations.html"):i+="realisations.html",$("#ajax-container").animateCss("fadeOutDown",function(){$("#ajax-content").hide(),$("#ajax-content").load(i+" #ajax-container",function(){$(".navbar-nav>.nav-link").removeClass("active"),$(".navbar-nav>.nav-link[href='realisations.html']").addClass("active"),$("#ajax-content").show(),$("#ajax-content").animateCss("fadeInUp"),a(),t(),o(),initCommisionsGallery(function(){$(".filter-item").each(function(n){if($(this).text().toLowerCase().trim()===e)return void $(this).trigger("click")})})})})})}function c(){if(!d){var n=new ScrollMagic.Controller({globalSceneOptions:{triggerHook:"onEnter",duration:"100%"}});new ScrollMagic.Scene({triggerElement:"#parallax1"}).setTween("#parallax1 > div",{y:"50%",ease:Linear.easeNone}).addTo(n)}}var s,l,m;n.mySite={};var d=function(){var n=["android","webos","iphone","ipad","blackberry"];for(i in n)if(navigator.userAgent.toLowerCase().search(n[i])>-1&&void 0!==window.orientation)return!0;return!1}();n.mySite.isMobileFlag=d,!0===d&&$("body").addClass("isMobile"),$(window).load(function(){r(),e(),a(),t(),o(),c()}),n.mySite.navMenuInit=e,n.mySite.placeContactListeners=a,n.mySite.placeButtonMoveUpListener=t,n.mySite.placeLangSwitchListener=o}(window));
function initCommisionsGallery(e){e="function"==typeof e?e:function(){};var i=0;$(".grid-item>.img-result-wrapper").hide(),$(".grid-item>.img-loader-wrapper").show(),$(".grid>.grid-item").addClass("hover-off"),$("#portfolios").imagesLoaded().always(function(i){console.log("all images of 'Commisions menu' loaded"),instantiateIsotopeGallery(".grid",{itemSelector:".grid-item",stagger:30}),buildImgCategories("#filter-portfolio","#portfolio-gallery .grid-item"),placeFilterListeners(".grid"),$(".grid-item>.img-result-wrapper").fadeOut(1e3),$(".img-loader>.img-loader-text").text("images loaded"),$(".img-loader-bar").css("background-color","green"),$(".img-loader").delay(3e3).slideUp(1e3),$(".grid>.grid-item").removeClass("hover-off"),e()}).done(function(){console.log("all images of 'Commisions menu' successfully loaded")}).fail(function(){console.log(i+" of 'Commisions menu' images have broken links. Check your image paths."),$(".img-loader").delay(3e3).slideUp(1e3)}).progress(function(e,t){t.isLoaded?($(t.img).siblings(".img-loader-wrapper").hide(),$(t.img).siblings(".img-result-wrapper").animateCss("bounceIn").show(),$(".img-loader-bar").width(e.progressedCount/e.images.length*100+"%")):(i++,$(t.img).parent().remove())})}function initPricingGallery(e){e="function"==typeof e?e:function(){};var i=0;$(".grid-pricing>.grid-item-pricing").addClass("hover-off"),$("#pricing").imagesLoaded().always(function(i){console.log("all images of 'Pricing menu' loaded"),instantiateIsotopeGallery(".grid-pricing",{itemSelector:".grid-item-pricing",stagger:30}),buildImgCategories("#filter-pricelist","#pricing-gallery .grid-item-pricing"),placeFilterListeners(".grid-pricing"),$(".grid-pricing>.grid-item-pricing").removeClass("hover-off"),e()}).done(function(){console.log("All images of 'Pricing menu' successfully loaded")}).fail(function(){console.log(i+" of 'Pricing menu' images have broken links. Check your image paths.")}).progress(function(e,t){t.isLoaded||(i++,$(t.img).parent().remove())})}function instantiateIsotopeGallery(e,i){$(e).isotope(i)}function buildImgCategories(e,i){var t=$(i),o=$(e),r={};o.children().remove(),t.each(function(){var e=this,i=$(this).data("portfolio-tags");i&&i.split(",").forEach(function(i){i=i.trim(),null==r[i]&&(r[i]=[]),r[i].push(e)})}),o.addClass("filter-wrapper"),$("<li/>").appendTo(o),$("<a/>",{text:"V≈°e",class:"filter-item selected",click:function(){$(this).addClass("selected").parent().siblings().children().removeClass("selected")}}).appendTo(o.children().eq(0)).attr("data-lang","V≈°e"),$("<li><a class='filter-item filter-portfolio-divider'>&nbsp;</a></li>").appendTo(o),$.each(r,function(e){$("<li/>").appendTo(o),$("<a/>",{text:e,class:"filter-item",click:function(){$(this).addClass("selected").parent().siblings().children().removeClass("selected")}}).appendTo(o.children().last()).attr("data-lang",e)})}function placeFilterListeners(e){$(".filter-wrapper").on("click",".filter-item",function(){var i=$(this).data("lang");i===$($(".filter-item")[0]).data("lang")?$(e).isotope({filter:function(){return!0}}):$(e).isotope({filter:function(){return tagText=$(this).data("portfolioTags"),found=tagText.search(i),found>-1}})}),$(e+" .grid-item").on("click",function(i){i.preventDefault(),$(this).hasClass("grid-item-selected")?$(this).removeClass("grid-item-selected"):($(e+" .grid-item").removeClass("grid-item-selected"),$(this).addClass("grid-item-selected")),$(e).isotope("layout")})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3QtZm9ybS5qcyIsImNvbnRhY3RfbWFwLmpzIiwiaW5pdC5qcyIsImxhbmd1YWdlLWNvbnRyb2xsZXIuanMiLCJuYXZpZ2F0aW9uLmpzIiwicG9ydGZvbGlvX2ZpbHRlci5qcyJdLCJuYW1lcyI6WyJpbml0Q29udGFjdEZvcm1MaXN0ZW5lciIsIiQiLCJvbiIsInN1Ym1pdCIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImNvbnNvbGUiLCJsb2ciLCJpbnB1dEVsZW1lbnRzIiwiZmluZCIsImZvcm1WYWx1ZXMiLCJlYWNoIiwidGhpcyIsIm5hbWUiLCJ0eXBlIiwiY2hlY2tlZCIsInZhbHVlIiwiSlNPTiIsInN0cmluZ2lmeSIsImFqYXgiLCJ1cmwiLCJtZXRob2QiLCJkYXRhIiwic3VjY2VzcyIsInJlc3VsdCIsInRleHQiLCJyZW1vdmVDbGFzcyIsIk9iamVjdCIsImtleXMiLCJlcnJvcnMiLCJsZW5ndGgiLCJpbnB1dE5hbWUiLCJoaWRlIiwic2xpZGVEb3duIiwiYWRkQ2xhc3MiLCJhbmltYXRlQ3NzIiwic2hvdyIsInZhbCIsImRlbGF5Iiwic2xpZGVVcCIsImVycm9yIiwiaW5pdENvbnRhY3RNYXAiLCJzdHlsZUFycmF5IiwiZmVhdHVyZVR5cGUiLCJlbGVtZW50VHlwZSIsInN0eWxlcnMiLCJzYXR1cmF0aW9uIiwiZ2FtbWEiLCJtYXAiLCJnb29nbGUiLCJtYXBzIiwiTWFwIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNlbnRlciIsIm15UG9zaXRpb24iLCJzY3JvbGx3aGVlbCIsInN0cmVldFZpZXdDb250cm9sIiwicG9zaXRpb24iLCJDb250cm9sUG9zaXRpb24iLCJMRUZUX0JPVFRPTSIsIm1hcFR5cGVDb250cm9sIiwibWFwVHlwZUNvbnRyb2xPcHRpb25zIiwiQk9UVE9NX0xFRlQiLCJ6b29tQ29udHJvbCIsInpvb21Db250cm9sT3B0aW9ucyIsIkxFRlRfQ0VOVEVSIiwic3R5bGVzIiwiem9vbSIsIm15TWFwIiwiTWFya2VyIiwidGl0bGUiLCJpY29uIiwic2NhbGVkU2l6ZSIsIlNpemUiLCJwYW5CeSIsImhlaWdodCIsImxhdCIsImxuZyIsImdsb2JhbCIsInNldEludGVydmFsIiwiZm4iLCJleHRlbmQiLCJhbmltYXRpb25OYW1lIiwiY2FsbEJhY2tGdW5jIiwib25lIiwiaXNGdW5jdGlvbiIsImluaXRDYXJvdXNlbHMiLCJjYXJvdXNlbHNTZXR1cCIsImNhcm91c2VsIiwiaW50ZXJ2YWwiLCJwYXVzZSIsImkiLCJ3aW5kb3ciLCJzaXRlTGFuZ3MiLCJMYW5nIiwiYWN0aXZlTGFuZyIsImluaXQiLCJwcm90b3R5cGUiLCJnZXRLZXlWYWwiLCJrZXlWYWwiLCJzZWxmIiwidHJpbSIsImRhdGF0YWciLCJzd2l0Y2hMYW5nIiwic3dpdGNoVG9MYW5nIiwibnVtT2ZMYW5nRWxzIiwicmV0cmlldmVkRGF0YVRhZyIsIkxORyQiLCJzZWFyY2giLCJzdWJzdHIiLCJhdHRyIiwiY3NzIiwiY2FsbGJhY2tGdW5jIiwiZ2V0SlNPTiIsImRvbmUiLCJmYWlsIiwianFYSFIiLCJ0ZXh0U3RhdHVzIiwiZXJyb3JUaHJvd24iLCJhbHdheXMiLCJpbml0TGFuZyIsImpRdWVyeSIsIm5hdk1lbnVJbml0IiwiYWRkU2NyaXB0Iiwic3JjIiwiZWwiLCJjYWxsYmFja0YiLCJhcHBlbmQiLCJhc3luYyIsImRlZmVyIiwidXBkYXRlUGFnZSIsImZhZGVJbiIsImNhY2hlZFBhZ2UiLCIkY2FjaGVkSXRlbXMiLCJpbmRleCIsIm15U2l0ZSIsInBsYWNlQnV0dG9uTW92ZVVwTGlzdGVuZXIiLCJwbGFjZUxhbmdTd2l0Y2hMaXN0ZW5lciIsImhyZWYiLCJ0b0xvd2VyQ2FzZSIsIm1lbnVOYW1lIiwic2libGluZ3MiLCJ1bmRlZmluZWQiLCJjb250cm9sbGVyIiwiZGVzdHJveSIsImNvbGxhcHNlIiwiZmFkZU91dCIsInN0b3AiLCJhbmltYXRlIiwic2Nyb2xsVG9wIiwicmVtb3ZlIiwibG9hZCIsInN0YXR1cyIsImluaXRDb21taXNpb25zR2FsbGVyeSIsInBsYWNlQ29udGFjdExpc3RlbmVycyIsImxpbmtUb0dhbGxlcnkiLCJpc01vYmlsZUZsYWciLCJTY3JvbGxNYWdpYyIsIkNvbnRyb2xsZXIiLCJnbG9iYWxTY2VuZU9wdGlvbnMiLCJ0cmlnZ2VySG9vayIsImR1cmF0aW9uIiwicGFyYWxsYXgxIiwiU2NlbmUiLCJ0cmlnZ2VyRWxlbWVudCIsInNldFR3ZWVuIiwieSIsImVhc2UiLCJMaW5lYXIiLCJlYXNlTm9uZSIsImFkZFRvIiwicGFyYWxsYXgyIiwiaW5pdFByaWNpbmdHYWxsZXJ5IiwiYXBwZW5kVG8iLCIkdGhpcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJjaGlsZHJlbiIsImhhc0NsYXNzIiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJpbm5lcldpZHRoIiwiZXZlbnQiLCJ0cmlnZ2VyIiwic2V0Q2VudGVyIiwib2ZmU2V0WSIsImFjdHVhbEhlaWdodCIsImFjdHVhbFNjcm9sbFBvcyIsImlzIiwianVtcEhhc2giLCJjdXJyZW50VGFyZ2V0IiwiaGFzaCIsImp1bXBQb2ludCIsIm9mZnNldCIsInRvcCIsInVwZGF0ZSIsImlzTGFuZ0RlZmluZWQiLCJhY3RpdmVMYW5ncyIsImxhbmdUb0NoZWNrIiwiaXNEZWZpbmVkIiwiaW5kZXhPZiIsImFjdGl2ZUxhbmd1YWdlcyIsImxhbmd1YWdlcyIsImN6IiwiZnIiLCJlbiIsImRlIiwiZXMiLCJwdXNoIiwibmV4dCIsImdhbExpbmsiLCJsb2NhdGlvbiIsInJlcGxhY2UiLCJpbml0UGFyYWxsYXgiLCJhZ2VudHMiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJvcmllbnRhdGlvbiIsImJyb2tlbkNvdW50IiwiaW1hZ2VzTG9hZGVkIiwiaW5zdGFuY2UiLCJpbnN0YW50aWF0ZUlzb3RvcGVHYWxsZXJ5IiwiaXRlbVNlbGVjdG9yIiwic3RhZ2dlciIsImJ1aWxkSW1nQ2F0ZWdvcmllcyIsInBsYWNlRmlsdGVyTGlzdGVuZXJzIiwicHJvZ3Jlc3MiLCJpbWFnZSIsImlzTG9hZGVkIiwiaW1nIiwid2lkdGgiLCJwcm9ncmVzc2VkQ291bnQiLCJpbWFnZXMiLCJwYXJlbnQiLCJvcHRpb25zIiwiaXNvdG9wZSIsImxpc3RFbGVtZW50IiwiaW1nQ29udGFpbmVycyIsIiRpbWdDb250YWluZXJzIiwiJGJ1dHRvbnMiLCJ0YWdnZWQiLCJpbWdDb250YWluZXIiLCJ0YWdzIiwic3BsaXQiLCJmb3JFYWNoIiwidGFnTmFtZSIsImNsYXNzIiwiY2xpY2siLCJlcSIsImxhc3QiLCJncmlkRWwiLCJmaWx0ZXJWYWx1ZSIsImZpbHRlciIsInRhZ1RleHQiLCJmb3VuZCJdLCJtYXBwaW5ncyI6IkFBQUEsUUFBU0EsMkJBSUxDLEVBQUUsMkJBQTJCQyxHQUFJLFFBQVMsV0FFdENELEVBQUcsaUJBQWtCRSxXQUd6QkYsRUFBRSxpQkFBaUJFLE9BQU8sU0FBU0MsR0FDL0JBLEVBQUVDLGlCQUVGQyxRQUFRQyxJQUFJLGlDQUVaLElBQUlDLEdBQWdCUCxFQUFFLGlCQUFpQlEsS0FBSywyQkFDeENDLElBRUpGLEdBQWNHLEtBQUssV0FDWEMsS0FBS0MsT0FDWSxZQUFiRCxLQUFLRSxNQUFtQyxTQUFiRixLQUFLRSxLQUM1QkYsS0FBS0csVUFDTEwsRUFBV0UsS0FBS0MsTUFBUUQsS0FBS0ksT0FHakNOLEVBQVdFLEtBQUtDLE1BQVFELEtBQUtJLFNBS3pDVixRQUFRQyxJQUFJLGdCQUFrQlUsS0FBS0MsVUFBVVIsSUFFN0NULEVBQUVrQixNQUNFQyxJQUFLLGdDQUNMQyxPQUFRLE9BQ1JDLEtBQU1aLEVBQ05hLFFBQVMsU0FBU0MsR0FRZCxHQU5BbEIsUUFBUUMsSUFBSSw2QkFBK0JVLEtBQUtDLFVBQVVNLElBRTFEdkIsRUFBRSxzQkFBc0J3QixLQUFLLElBQzdCeEIsRUFBRSwrQ0FBK0N5QixZQUFZLGNBQzdEekIsRUFBRSxnQkFBZ0J3QixLQUFLLElBRW5CRSxPQUFPQyxLQUFLSixFQUFPSyxRQUFRQyxPQUFTLEVBQ3BDLElBQUssR0FBSUMsS0FBYVAsR0FBT0ssT0FDekJ2QixRQUFRQyxJQUFJLFlBQWN3QixFQUFZLEtBQU9QLEVBQU9LLE9BQU9FLElBRTNEOUIsRUFBRSxzQkFBd0I4QixFQUFZLE1BQU1OLEtBQUtELEVBQU9LLE9BQU9FLElBQVlDLE9BQU9DLFlBQ2xGaEMsRUFBRSxXQUFhOEIsRUFBWSxNQUFNRyxTQUFTLGNBQzFDakMsRUFBRSxXQUFhOEIsRUFBWSxNQUFNSSxXQUFXLGFBR2hEN0IsU0FBUUMsSUFBSSxzQ0FFWk4sRUFBRSxnQkFBZ0J3QixLQUFLLDBDQUN2QnhCLEVBQUUsZ0JBQWdCeUIsWUFBWSxnQkFBZ0JRLFNBQVMsaUJBRXZEakMsRUFBRSxnQkFBZ0JtQyxPQUFPRCxXQUFXLFdBQVksV0FDNUNsQyxFQUFFLFNBQVNvQyxJQUFJLElBQ2ZwQyxFQUFFLFlBQVlvQyxJQUFJLElBQ2xCcEMsRUFBRSxnQkFBZ0JxQyxNQUFNLEtBQU1DLGFBSTFDQyxNQUFPLFdBQ0h2QyxFQUFFLGdCQUFnQnlCLFlBQVksaUJBQzlCekIsRUFBRSxnQkFBZ0JpQyxTQUFTLGdCQUMzQmpDLEVBQUUsZ0JBQWdCd0IsS0FBSyx3REFDdkJ4QixFQUFFLGdCQUFnQmdDO0FDOURoQyxRQUFTUSxrQkFHUCxHQUFJQyxLQUVBQyxZQUFlLE1BQ2ZDLFlBQWUsTUFDZkMsVUFFUUMsWUFBZSxNQUdmQyxNQUFTLE9BT2pCQyxFQUFNLEdBQUlDLFFBQU9DLEtBQUtDLElBQUlDLFNBQVNDLGVBQWUsZ0JBQ2xEQyxPQUFRQyxXQUNSQyxhQUFhLEVBQ2JDLG1CQUFtQixFQUNuQkEsbUJBQ0VDLFNBQVVULE9BQU9DLEtBQUtTLGdCQUFnQkMsYUFFeENDLGdCQUFnQixFQUNoQkMsdUJBQ0lKLFNBQVVULE9BQU9DLEtBQUtTLGdCQUFnQkksYUFFMUNDLGFBQWEsRUFDYkMsb0JBQ0VQLFNBQVVULE9BQU9DLEtBQUtTLGdCQUFnQk8sYUFHeENDLE9BQVF6QixFQUNSMEIsS0FBTSxJQUdWQyxPQUFRckIsQ0FHSyxJQUFJQyxRQUFPQyxLQUFLb0IsUUFDM0J0QixJQUFLQSxFQUNMVSxTQUFVSCxXQUNWZ0IsTUFBTyxtQkFDUEMsTUFDRXBELElBQUssNENBQ0xxRCxXQUFZLEdBQUl4QixRQUFPQyxLQUFLd0IsS0FBSyxJQUFLLE9BSTFDTCxPQUFNTSxNQUFNLEdBQUkxRSxFQUFFLGNBQWMyRSxVQXZEbEMsR0FBSVAsT0FDQWQsWUFBY3NCLElBQUssVUFBV0MsSUFBSztBQ0p6QzdFLEVBQUUsU0FBUzhFLEdBS1A5RSxFQUFFLG1CQUFtQitCLE1BRUhnRCxhQUFZLFdBQ3RCL0UsRUFBRSxhQUFha0MsV0FBVyxXQUM1QixJQUdObEMsR0FBRWdGLEdBQUdDLFFBQ0QvQyxXQUFZLFNBQVVnRCxFQUFlQyxHQVFqQyxNQU5BeEUsTUFBS3NCLFNBQVMsWUFBY2lELEdBQWVFLElBRHhCLCtFQUMwQyxXQUN6RHBGLEVBQUVXLE1BQU1jLFlBQVksWUFBY3lELEdBQzlCbEYsRUFBRXFGLFdBQVdGLElBQ2JBLE1BR0R4RSxRQUlmMkUsY0FBZ0IsV0FDWmpGLFFBQVFDLElBQUksd0JBa0NaLEtBQUssR0FqQ0RpRixLQUVRQyxTQUFVLGlCQUNWQyxTQUFTLElBQ1RDLE1BQU8sU0FHUEYsU0FBVSxrQkFDVkMsU0FBUyxJQUNUQyxNQUFPLFNBR1BGLFNBQVUsc0JBQ1ZDLFNBQVMsSUFDVEMsTUFBTyxTQUdQRixTQUFVLGtCQUNWQyxTQUFTLElBQ1RDLE1BQU8sU0FHUEYsU0FBVSx3QkFDVkMsU0FBUyxJQUNUQyxNQUFPLFNBR1BGLFNBQVUscUJBQ1ZDLFNBQVMsSUFDVEMsTUFBTyxTQUlWQyxFQUFFLEVBQUdBLEVBQUVKLEVBQWUxRCxPQUFPLEVBQUU4RCxJQUNwQzNGLEVBQUV1RixFQUFlSSxHQUFhLFVBQUdILFVBQzdCQyxTQUFVRixFQUFlSSxHQUFhLFlBS2xEYixFQUFPUSxjQUFnQkEsZUFFekJNO0NDckVELFNBQVNkLEVBQU85RSxHQUVoQixHQUNJNkYsSUFBYSxLQUFLLE1BRWxCQyxFQUFPLFNBQVNDLEdBQ25CLE1BQU8sSUFBSUQsR0FBS0UsS0FBS0QsR0FHdEJELEdBQUtHLFdBQ0pDLFVBQVcsU0FBU0MsR0FFbkIsTUFEQUMsTUFBT3pGLEtBQ0EsV0FDTndGLEVBQVNBLEVBQU9FLE1BRWhCLEtBQUssR0FERDlFLEdBQ0tvRSxFQUFFLEVBQUdBLEdBQUtHLEVBQUt6RSxLQUFLUSxPQUFPLEVBQUc4RCxJQUFLLENBQzNDLEdBQUlHLEVBQUt6RSxLQUFLc0UsR0FBR1csVUFBVUgsRUFFMUIsTUFEQTVFLEdBQVN1RSxFQUFLekUsS0FBS3NFLEdBQUdTLEtBQUtMLFdBRzNCeEUsR0FBUyxHQUdYLE1BQU9BLE9BR1RnRixXQUFZLFNBQVNDLEdBQ3BCSixLQUFPekYsSUFFUCxLQUFLLEdBREQ4RixHQUFlekcsRUFBRSxlQUFlNkIsT0FDM0I4RCxFQUFHLEVBQUVBLEdBQUdjLEVBQWEsRUFBRWQsSUFBSyxDQUNwQyxHQUFJZSxHQUFtQjFHLEVBQUVBLEVBQUUsZUFBZTJGLElBQUl0RSxLQUFLLE9BQ25ETixPQUFRNEYsS0FBS0gsR0FBY04sVUFBVVEsR0FDbEIsS0FBZjNGLE1BQU1zRixTQUNMdEYsTUFBTTZGLE9BQU8sU0FBUyxHQUN6QjdGLE1BQVFBLE1BQU04RixPQUFPLEVBQUU5RixNQUFNYyxRQUM3QjdCLEVBQUVBLEVBQUUsZUFBZTJGLElBQUltQixLQUFLLGNBQWMvRixRQUUxQ2YsRUFBRUEsRUFBRSxlQUFlMkYsSUFBSW5FLEtBQUttRixLQUFLSCxHQUFjTixVQUFVUSxJQUFtQnhFLFdBQVcsU0FFeEZsQyxFQUFFQSxFQUFFLGVBQWUyRixJQUFJb0IsSUFBSSxhQUFhLGVBTzVDakIsRUFBS0UsS0FBTyxTQUFTRCxHQUNUcEYsS0FDTm9GLFdBQWFBLEdBQWNGLEVBQVUsSUFHM0NDLEVBQUtFLEtBQUtDLFVBQVlILEVBQUtHLFVBQzNCbkIsRUFBT2dCLEtBQU9oQixFQUFPNkIsS0FBT2IsRUFRNUIsU0FBdUIzRSxFQUFLNkYsR0FDZmhILEVBQUVpSCxRQUFROUYsRUFBSyxjQUd4QitGLEtBQUssU0FBUzdGLEdBQ2RoQixRQUFRQyxJQUFLLHVCQUViMEcsRUFBYTNGLEtBRWI4RixLQUFLLFNBQVNDLEVBQU9DLEVBQVlDLEdBQ2pDakgsUUFBUUMsSUFBSyxpQkFDYkQsUUFBUUMsSUFBSThHLEtBRVpHLE9BQU8sZUF2RUYsMEJBb0RTLFNBQVNsRyxHQUMxQnlFLEVBQUt6RSxLQUFPQSxDQUNaLElBQUltRyxHQUFXeEgsRUFBRSx1QkFBdUJ3QixPQUFPNkUsTUFDL0NNLE1BQUthLEdBQVVqQixXQUFXaUIsTUFxQjFCNUIsT0FBUTZCO0FDNUVWekgsRUFBRSxTQUFTOEUsR0F1QlYsUUFBUzRDLEtBWVAsUUFBU0MsR0FBV0MsRUFBS0MsRUFBR0MsR0FDSixrQkFBWkEsS0FDVkEsRUFBVSxjQUVYOUgsRUFBRTZILEdBQUlFLE9BQU8vSCxFQUFFLGNBQ2I0SCxJQUFLQSxFQUNOSSxPQUFPLEVBQ1BDLE9BQU8sS0FFUkgsSUFHRCxRQUFTSSxHQUFXbEIsR0FDUSxrQkFBaEJBLEtBQ1RBLEVBQWUsY0FFakJoSCxFQUFFLG1CQUFtQm1DLE9BQ3JCbkMsRUFBRSxpQkFBaUIrQixPQUNuQi9CLEVBQUUsbUJBQW1CK0IsT0FDckIvQixFQUFFLGlCQUFpQm1DLE9BQ25CbkMsRUFBRSxpQkFBaUJtSSxPQUFPLElBQUksV0FDN0JuQixNQWhDRixHQUFJb0IsS0FDSkMsY0FBZXJJLEVBQUUsK0JBQ2pCQSxFQUFFcUksY0FBYzNILEtBQUssU0FBUzRILEVBQU12SCxHQUNuQ3FILEVBQVdwSSxFQUFFZSxHQUFPTSxLQUFLLGFBQWUsS0FFekN5RCxFQUFPeUQsT0FBT0gsV0FBYUEsRUFFM0JJLElBQ0FDLEdBQXdCLEdBNEJ2QnpJLEVBQUUsZUFBZUMsR0FBRyxtQkFBb0IsV0FDdENELEVBQUUseUJBQXlCaUMsU0FBUyxtQ0FFdENqQyxFQUFFLGVBQWVDLEdBQUcsbUJBQW9CLFdBQ3RDRCxFQUFFLHlCQUF5QnlCLFlBQVksbUNBR3hDekIsRUFBRSxhQUFhQyxHQUFJLFFBQVMsU0FBU0UsR0FDakNBLEVBQUVDLGdCQUNGLElBQUllLEdBQU1SLEtBQUsrSCxLQUFLckMsT0FBT3NDLGNBQ3ZCQyxFQUFXNUksRUFBRVcsTUFBTVUsS0FBSyxZQUFZZ0YsT0FBT3NDLGNBQy9DbkIsRUFBV3hILEVBQUUsdUJBQXVCd0IsT0FBTzZFLE1BRTNDckcsR0FBRVcsTUFBTWtJLFNBQVMsYUFBYXBILFlBQVksVUFDMUN6QixFQUFFVyxNQUFNc0IsU0FBUyxjQUVKNkcsS0FBYkMsR0FBdUMsT0FBYkEsSUFDN0JBLEVBQWFBLEVBQVdDLFNBQVEsSUFJakNoSixFQUFFLGVBQWVpSixTQUFTLFFBRXRCakosRUFBRSxtQkFBbUJtQyxPQUNyQm5DLEVBQUUsbUJBQW1Ca0osUUFBUSxJQUFLLFdBRWpDbEosRUFBRSxhQUFhbUosT0FBT0MsU0FBU0MsVUFBVSxHQUFJLE1BQ2pEckosRUFBRVcsTUFBTTJJLFNBRTBCLEtBQTlCZixPQUFPSCxXQUFXUSxHQUdqQjVJLEVBQUUsaUJBQWlCdUosS0FBS3BJLEVBQU0sbUJBQW9CLFNBQVNJLEVBQU9pSSxHQUN0RCxZQUFYQSxHQUNIbkosUUFBUUMsSUFBSSxXQUFhc0ksRUFBVyxvQkFDcENWLEVBQVcsV0FDVnZCLEtBQUthLEdBQVVqQixXQUFXaUIsS0FHUixpQkFBWG9CLEdBQ1BSLEVBQVdRLEdBQVU1SSxFQUFFdUIsR0FBUWYsS0FBSyxtQkFDaENpSixzQkFBc0IsV0FDeEI5QyxLQUFLYSxHQUFVakIsV0FBV2lCLE1BRUgsWUFBWG9CLEdBQ2RSLEVBQVdRLEdBQVU1SSxFQUFFdUIsR0FBUWYsS0FBSyxtQkFDcENtSCxFQUNDLDhHQUNBLE9BQ0EsV0FDQzNILEVBQUUsV0FDQ0EsRUFBRTRGLFFBQVEyRCxLQUFLLFdBQ2QvRyxpQkFDRHpDLDBCQUNBMkosV0FNb0IsU0FBWGQsR0FDZFIsRUFBV1EsR0FBVTVJLEVBQUV1QixHQUFRZixLQUFLLG1CQUNoQzhFLGdCQUNBcUUsSUFDS0MsSUFDSmIsRUFBYSxHQUFJYyxhQUFZQyxZQUFZQyxvQkFBcUJDLFlBQWEsVUFBV0MsU0FBVSxVQUNoR0MsRUFBWSxHQUFJTCxhQUFZTSxPQUFPQyxlQUFnQixlQUM5Q0MsU0FBUyxvQkFBcUJDLEVBQUcsTUFBT0MsS0FBTUMsT0FBT0MsV0FFckRDLE1BQU0zQixLQUdTLFVBQVhILEdBQ2RSLEVBQVdRLEdBQVU1SSxFQUFFdUIsR0FBUWYsS0FBSyxtQkFDaEM4RSxnQkFDS3NFLElBQ0piLEVBQWEsR0FBSWMsYUFBWUMsWUFBWUMsb0JBQXFCQyxZQUFhLFVBQVdDLFNBQVUsVUFDaEdVLEVBQVksR0FBSWQsYUFBWU0sT0FBT0MsZUFBZ0IsZUFDcERDLFNBQVMsb0JBQXFCQyxFQUFHLE1BQU9DLEtBQU1DLE9BQU9DLFdBRXJEQyxNQUFNM0IsS0FFZSxZQUFYSCxJQUNkUixFQUFXUSxHQUFVNUksRUFBRXVCLEdBQVFmLEtBQUssbUJBQ2hDb0ssbUJBQW1CLFdBQ3RCakUsS0FBS2EsR0FBVWpCLFdBQVdpQixPQUdILFVBQVhnQyxJQUNWeEosRUFBRSxtQkFBbUIrQixPQUNyQjFCLFFBQVFDLElBQUksb0NBT2xCRCxRQUFRQyxJQUFJLFdBQWFzSSxFQUFXLG1CQUNwQzVJLEVBQUV1SSxPQUFPSCxXQUFXUSxJQUFXaUMsU0FBUyxpQkFFeEMzQyxFQUFXLFdBQ1Z2QixLQUFLYSxHQUFVakIsV0FBV2lCLFVBVWpDLFFBQVNrQyxLQUNSMUosRUFBRSxZQUFZQyxHQUFHLFFBQVMsU0FBU0UsR0FDbENBLEVBQUVDLGdCQUNGLElBQUkwSyxHQUFNOUssRUFBRVcsS0F3QlosSUF0QkFpRixPQUFPbUYsaUJBQWlCLG9CQUFxQixXQUN4Q0QsRUFBTUUsV0FBV0MsU0FBUyxlQUN6QnJGLE9BQU9zRixXQUFXLDRCQUE0QkMsU0FBV3ZGLE9BQU93RixXQUFXLElBQzlFcEwsRUFBRSxnQkFBZ0JvSixTQUNqQnpFLE9BQVEsUUFDUCxJQUFLLFdBQ04zQixPQUFPQyxLQUFLb0ksTUFBTUMsUUFBUWxILE1BQU8sVUFDakNBLE1BQU1tSCxVQUFVakksWUFDaEJjLE1BQU1NLE1BQU0sR0FBSTFFLEVBQUUsY0FBYzJFLFlBR2pDM0UsRUFBRSxnQkFBZ0JvSixTQUNqQnpFLE9BQVEsUUFDUCxJQUFLLFdBQ04zQixPQUFPQyxLQUFLb0ksTUFBTUMsUUFBUWxILE1BQU8sVUFDakNBLE1BQU1tSCxVQUFVakksWUFDaEJjLE1BQU1NLE1BQU0sR0FBSTFFLEVBQUUsY0FBYzJFLGVBSWpDLEdBRUNtRyxFQUFNRSxXQUFXQyxTQUFTLGFBUzdCLE1BUkFILEdBQU1FLFdBQVd2SixZQUFZLGFBQWFRLFNBQVMsbUJBQ25EakMsR0FBRSxnQkFBZ0JvSixTQUNqQnpFLE9BQVEsU0FDUCxJQUFLLFdBQ04zQixPQUFPQyxLQUFLb0ksTUFBTUMsUUFBUWxILE1BQU8sVUFDakNBLE1BQU1tSCxVQUFVakksWUFDaEJjLE1BQU1NLE1BQU0sR0FBSTFFLEVBQUUsY0FBYzJFLFdBR3ZCbUcsR0FBTUUsV0FBV0MsU0FBUyxpQkFDcENILEVBQU1FLFdBQVd2SixZQUFZLGVBQWVRLFNBQVMsYUFDakQyRCxPQUFPc0YsV0FBVyw0QkFBNEJDLFNBQVd2RixPQUFPd0YsV0FBVyxJQUM5RXBMLEVBQUUsZ0JBQWdCb0osU0FDakJ6RSxPQUFRLFFBQ1AsSUFBSyxXQUNOM0IsT0FBT0MsS0FBS29JLE1BQU1DLFFBQVFsSCxNQUFPLFVBQ2pDQSxNQUFNbUgsVUFBVWpJLFlBQ2hCYyxNQUFNTSxNQUFNLEdBQUkxRSxFQUFFLGNBQWMyRSxZQUdqQzNFLEVBQUUsZ0JBQWdCb0osU0FDakJ6RSxPQUFRLFFBQ1AsSUFBSyxXQUNOM0IsT0FBT0MsS0FBS29JLE1BQU1DLFFBQVFsSCxNQUFPLFVBQ2pDQSxNQUFNbUgsVUFBVWpJLFlBQ2hCYyxNQUFNTSxNQUFNLEdBQUkxRSxFQUFFLGNBQWMyRSxlQU9yQyxRQUFTNkQsS0FFUixHQUFJZ0QsR0FBUSxDQUNaeEwsR0FBRTRGLFFBQVEzRixHQUFHLFNBQVUsV0FDdEIsR0FBSXdMLEdBQWV6TCxFQUFFNEYsUUFBUWpCLFNBQ3pCK0csRUFBa0IxTCxFQUFFNEYsUUFBUXlELFdBRWhDbUMsR0FBVUMsRUFBYSxFQUVuQkMsRUFBZ0IsSUFBSUEsRUFBZ0IsSUFLbENELEVBQWFELEdBQVNFLEVBQWlCLEVBQ3hDMUwsRUFBRSxnQkFBZ0IyTCxHQUFHLGFBQ3hCM0wsRUFBRSxnQkFBZ0JrQyxXQUFXLFlBQWEsV0FDekNsQyxFQUFFLGdCQUFnQitCLE9BQ2xCL0IsRUFBRSxhQUFhbUMsT0FBT0QsV0FBVyxjQU05QmxDLEVBQUUsZ0JBQWdCMkwsR0FBRyxhQUN4QjNMLEVBQUUsYUFBYWtDLFdBQVcsWUFBWSxXQUNyQ2xDLEVBQUUsYUFBYStCLE9BQ2YvQixFQUFFLGdCQUFnQm1DLE9BQ2xCbkMsRUFBRSxnQkFBZ0JrQyxXQUFXLGdCQUtsQ2xDLEVBQUUsZ0JBQWdCQyxHQUFHLFFBQVMsV0FDN0JELEVBQUUsYUFBYW1KLE9BQU9DLFNBQVNDLFVBQVUsR0FBSSxNQUFPLFdBRXJEckosRUFBRSxhQUFhQyxHQUFHLFFBQVMsU0FBU0UsR0FDbkNBLEVBQUVDLGdCQUNGLElBQUl3TCxHQUFXekwsRUFBRTBMLGNBQWNDLEtBQzNCQyxFQUFZL0wsRUFBRTRMLEdBQVVJLFNBQVNDLEdBQ3JDak0sR0FBRSxhQUFhbUosT0FBT0MsU0FBU0MsVUFBVTBDLEdBQVksTUFBTyxXQUs5RCxRQUFTdEQsR0FBd0J5RCxHQWdDaEMsUUFBU0MsR0FBY0MsRUFBWUMsR0FDUixnQkFBZkQsS0FDVkEsRUFBY0EsT0FFVyxnQkFBZkMsS0FDVkEsRUFBY0EsR0FBZSxHQUU5QixJQUFJQyxJQUFZLENBT2hCLFFBTGEsSUFESEYsRUFBWUcsUUFBUXhHLEdBRTdCMUYsUUFBUUMsSUFBSSxxQkFBc0IrTCxFQUFhLHdFQUUvQ0MsR0FBWSxFQUVOQSxFQTdDUixHQUFJSixHQUFTQSxJQUFVLEVBQ25CTSxLQUNBQyxHQUNIQyxJQUFLLEVBQ0xDLElBQUssRUFDTEMsSUFBSyxFQUNMQyxJQUFLLEVBQ0xDLElBQUssRUFFTjlNLEdBQUVVLEtBQUsrTCxFQUFXLFNBQVNuRSxFQUFNdkgsR0FDNUJBLEdBQ0h5TCxFQUFnQk8sS0FBS3pFLElBR3ZCLElBQUl2QyxHQUFhL0YsRUFBRSx1QkFBdUJ3QixPQUFPNkUsTUFDN0M2RixJQUNIdkYsS0FBS1osR0FBWVEsV0FBV1IsR0FHN0IvRixFQUFFLHVCQUF1QkMsR0FBRyxRQUFTLFdBQ3BDLEdBQUkrTSxHQUFPUixFQUFnQkQsUUFBUXhHLEdBQVksQ0FDMUNvRyxHQUFjSyxFQUFnQnpHLEtBR0RpSCxFQUFsQ0EsSUFBU1IsRUFBZ0IzSyxPQUFjLEVBQVNtTCxFQUNoRGpILEVBQWF5RyxFQUFnQlEsR0FDN0JoTixFQUFFLHVCQUF1QndCLEtBQUt1RSxHQUM5QlksS0FBS1osR0FBWVEsV0FBV1IsR0FDNUIvRixFQUFFVyxNQUFNdUIsV0FBVyxlQXFCckIsUUFBU3lILEtBRVIzSixFQUFFLGFBQWFDLEdBQUcsUUFBUSxTQUFTRSxHQUNsQ0EsRUFBRUMsY0FDRixJQUFJNk0sR0FBVWpOLEVBQUVXLE1BQU1VLEtBQUssUUFBUWdGLE9BQy9CbEYsRUFBTXlFLE9BQU9zSCxTQUFTeEUsSUFDdEJ2SCxHQUFJeUYsT0FBTyxlQUFpQixFQUMvQnpGLEVBQU1BLEVBQUlnTSxRQUFRLGFBQWEscUJBRS9CaE0sR0FBWSxvQkFHUG5CLEVBQUUsbUJBQW1Ca0MsV0FBVyxjQUFlLFdBQzlDbEMsRUFBRSxpQkFBaUIrQixPQUNuQi9CLEVBQUUsaUJBQWlCdUosS0FBS3BJLEVBQU0sbUJBQW9CLFdBQ2pEbkIsRUFBRSx5QkFBeUJ5QixZQUFZLFVBQ3ZDekIsRUFBRSxtREFBbURpQyxTQUFTLFVBRTlEakMsRUFBRSxpQkFBaUJtQyxPQUNuQm5DLEVBQUUsaUJBQWlCa0MsV0FBVyxZQUM5QndILElBQ0FsQixJQUNBQyxJQUNBZ0Isc0JBQXNCLFdBQ3JCekosRUFBRSxnQkFBZ0JVLEtBQUssU0FBU2lGLEdBQy9CLEdBQUkzRixFQUFFVyxNQUFNYSxPQUFPbUgsY0FBY3RDLFNBQVc0RyxFQUUzQyxXQURBak4sR0FBRVcsTUFBTTJLLFFBQVEsbUJBVzdCLFFBQVM4QixLQUNSLElBQUt4RCxFQUNFLENBQUEsR0FBSWIsR0FBYSxHQUFJYyxhQUFZQyxZQUFZQyxvQkFBcUJDLFlBQWEsVUFBV0MsU0FBVSxTQUNwRixJQUFJSixhQUFZTSxPQUFPQyxlQUFnQixlQUNsREMsU0FBUyxvQkFBcUJDLEVBQUcsTUFBT0MsS0FBTUMsT0FBT0MsV0FFckRDLE1BQU0zQixJQWhYbkIsR0FBSUEsR0FBWW1CLEVBQVdTLENBQzNCN0YsR0FBT3lELFNBWVAsSUFBSXFCLEdBVkosV0FDSSxHQUFJeUQsSUFBVSxVQUFXLFFBQVMsU0FBVSxPQUFRLGFBQ3BELEtBQUkxSCxJQUFLMEgsR0FDTCxHQUFJQyxVQUFVQyxVQUFVNUUsY0FBYy9CLE9BQU95RyxFQUFPMUgsS0FBSyxPQUE0Qm1ELEtBQXJCbEQsT0FBTzRILFlBQ25FLE9BQU8sQ0FHZixRQUFPLElBSVgxSSxHQUFPeUQsT0FBT3FCLGFBQWVBLEdBSVYsSUFBZkEsR0FDSDVKLEVBQUUsUUFBUWlDLFNBQVMsWUFpV3BCakMsRUFBRTRGLFFBQVEyRCxLQUFLLFdBQ2RJLElBQ0FqQyxJQUNBZ0MsSUFDQWxCLElBQ0FDLElBQ0EyRSxNQUlEdEksRUFBT3lELE9BQU9iLFlBQWNBLEVBQzVCNUMsRUFBT3lELE9BQU9tQixzQkFBd0JBLEVBQ3RDNUUsRUFBT3lELE9BQU9DLDBCQUE0QkEsRUFDMUMxRCxFQUFPeUQsT0FBT0Usd0JBQTBCQSxHQUV2QzdDO0FDcFlELFFBQVM2RCx1QkFBc0J6QyxHQUNLQSxFQUFiLGtCQUFmQSxHQUEyQ0EsRUFBOEIsWUFFaEYsSUFBSXlHLEdBQWMsQ0FFbEJ6TixHQUFFLGtDQUFrQytCLE9BQ3BDL0IsRUFBRSxrQ0FBa0NtQyxPQUNwQ25DLEVBQUUsb0JBQW9CaUMsU0FBUyxhQUUvQmpDLEVBQUUsZUFBZTBOLGVBQ2RuRyxPQUFRLFNBQVVvRyxHQUNqQnROLFFBQVFDLElBQUksMENBRWZzTiwwQkFBMEIsU0FDdkJDLGFBQWMsYUFDZEMsUUFBUyxLQUdUQyxtQkFBbUIsb0JBQW9CLGlDQUN2Q0MscUJBQXFCLFNBRXhCaE8sRUFBRSxrQ0FBa0NrSixRQUFRLEtBQ3pDbEosRUFBRSxnQ0FBZ0N3QixLQUFLLGlCQUN2Q3hCLEVBQUUsbUJBQW1CK0csSUFBSSxtQkFBbUIsU0FDNUMvRyxFQUFFLGVBQWVxQyxNQUFNLEtBQU1DLFFBQVEsS0FDckN0QyxFQUFFLG9CQUFvQnlCLFlBQVksYUFFbEN1RixNQUdERSxLQUFNLFdBQ0w3RyxRQUFRQyxJQUFJLHlEQUdiNkcsS0FBTSxXQUNMOUcsUUFBUUMsSUFBS21OLEVBQWMsMkVBQzNCek4sRUFBRSxlQUFlcUMsTUFBTSxLQUFNQyxRQUFRLE9BRXhDMkwsU0FBVSxTQUFVTixFQUFVTyxHQUV2QkEsRUFBTUMsVUFDVG5PLEVBQUVrTyxFQUFNRSxLQUFLdkYsU0FBUyx1QkFBdUI5RyxPQUM3Qy9CLEVBQUVrTyxFQUFNRSxLQUFLdkYsU0FBUyx1QkFBdUIzRyxXQUFXLFlBQVlDLE9BQ3ZFbkMsRUFBRSxtQkFBbUJxTyxNQUFPVixFQUFTVyxnQkFBZ0JYLEVBQVNZLE9BQU8xTSxPQUFRLElBQU0sT0FFbkY0TCxJQUNBek4sRUFBRWtPLEVBQU1FLEtBQUtJLFNBQVNsRixZQU16QixRQUFTc0Isb0JBQW1CNUQsR0FDUUEsRUFBYixrQkFBZkEsR0FBMkNBLEVBQThCLFlBRWhGLElBQUl5RyxHQUFjLENBQ2xCek4sR0FBRSxvQ0FBb0NpQyxTQUFTLGFBRS9DakMsRUFBRSxZQUFZME4sZUFDWG5HLE9BQVEsU0FBVW9HLEdBQ2hCdE4sUUFBUUMsSUFBSSx1Q0FFWnNOLDBCQUEwQixpQkFDMUJDLGFBQWMscUJBQ2RDLFFBQVMsS0FHVEMsbUJBQW1CLG9CQUFvQix1Q0FDdkNDLHFCQUFxQixpQkFDckJoTyxFQUFFLG9DQUFvQ3lCLFlBQVksYUFFcER1RixNQUdDRSxLQUFNLFdBQ0w3RyxRQUFRQyxJQUFJLHNEQUdiNkcsS0FBTSxXQUNMOUcsUUFBUUMsSUFBS21OLEVBQWMsMEVBRTlCUSxTQUFVLFNBQVVOLEVBQVVPLEdBRXRCQSxFQUFNQyxXQUNiVixJQUNBek4sRUFBRWtPLEVBQU1FLEtBQUtJLFNBQVNsRixZQU0xQixRQUFTc0UsMkJBQTBCL0YsRUFBRzRHLEdBQ3JDek8sRUFBRTZILEdBQUk2RyxRQUFRRCxHQUdmLFFBQVNWLG9CQUFtQlksRUFBWUMsR0FFdkMsR0FBSUMsR0FBaUI3TyxFQUFFNE8sR0FDbkJFLEVBQVc5TyxFQUFFMk8sR0FDYkksSUFFSkQsR0FBUzlELFdBQVcxQixTQUVwQnVGLEVBQWVuTyxLQUFLLFdBQ25CLEdBQUlzTyxHQUFhck8sS0FDYnNPLEVBQU9qUCxFQUFFVyxNQUFNVSxLQUFLLGlCQUVwQjROLElBQ0hBLEVBQUtDLE1BQU0sS0FBS0MsUUFBUSxTQUFTQyxHQUNoQ0EsRUFBVUEsRUFBUS9JLE9BQ0csTUFBakIwSSxFQUFPSyxLQUNWTCxFQUFPSyxPQUVSTCxFQUFPSyxHQUFTckMsS0FBS2lDLE9BS3hCRixFQUFTN00sU0FBUyxrQkFDbEJqQyxFQUFFLFNBQVM2SyxTQUFTaUUsR0FFcEI5TyxFQUFFLFFBQ0R3QixLQUFNLE1BQ042TixNQUFPLHVCQUNQQyxNQUFPLFdBQ050UCxFQUFFVyxNQUFNc0IsU0FBUyxZQUFZdU0sU0FBUzNGLFdBQVdtQyxXQUFXdkosWUFBWSxlQUV2RW9KLFNBQVNpRSxFQUFTOUQsV0FBV3VFLEdBQUcsSUFBSXpJLEtBQUssWUFBWSxPQUV4RDlHLEVBQUUsdUVBQXVFNkssU0FBU2lFLEdBRWxGOU8sRUFBRVUsS0FBS3FPLEVBQVEsU0FBU0ssR0FDdkJwUCxFQUFFLFNBQVM2SyxTQUFTaUUsR0FFcEI5TyxFQUFFLFFBQ0R3QixLQUFNNE4sRUFDTkMsTUFBTyxjQUNQQyxNQUFPLFdBQ050UCxFQUFFVyxNQUFNc0IsU0FBUyxZQUFZdU0sU0FBUzNGLFdBQVdtQyxXQUFXdkosWUFBWSxlQUV2RW9KLFNBQVNpRSxFQUFTOUQsV0FBV3dFLFFBQVExSSxLQUFLLFlBQVlzSSxLQUszRCxRQUFTcEIsc0JBQXFCeUIsR0FDMUJ6UCxFQUFFLG1CQUFtQkMsR0FBSSxRQUFTLGVBQWdCLFdBQ2pELEdBQUl5UCxHQUFjMVAsRUFBRVcsTUFBTVUsS0FBSyxPQUkzQnFPLEtBQWdCMVAsRUFBRUEsRUFBRSxnQkFBZ0IsSUFBSXFCLEtBQUssUUFDaERyQixFQUFFeVAsR0FBUWYsU0FDVmlCLE9BQVEsV0FDUCxPQUFPLEtBSVYzUCxFQUFFeVAsR0FBUWYsU0FDUGlCLE9BQVEsV0FHUCxNQUZBQyxTQUFTNVAsRUFBRVcsTUFBTVUsS0FBSyxpQkFDdEJ3TyxNQUFRRCxRQUFRaEosT0FBTzhJLEdBQ25CRyxPQUFRLE9BVW5CN1AsRUFBRXlQLEVBQVMsZUFBZXhQLEdBQUksUUFBUyxTQUFTRSxHQUMvQ0EsRUFBRUMsaUJBQ0VKLEVBQUVXLE1BQU1zSyxTQUFTLHNCQUNwQmpMLEVBQUVXLE1BQU1jLFlBQVksdUJBRXBCekIsRUFBRXlQLEVBQVMsZUFBZWhPLFlBQVksc0JBQ3RDekIsRUFBRVcsTUFBTXNCLFNBQVMsdUJBRWxCakMsRUFBRXlQLEdBQVFmLFFBQVEiLCJmaWxlIjoic2NyaXB0cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGluaXRDb250YWN0Rm9ybUxpc3RlbmVyKCkge1xuICAgIFxuICAgIC8vY29uc29sZS5sb2coXCJpbnNpZGUgb2YgYSBmdW5jdGlvbiBJbml0Rm9ybUxpc3RlbmVyXCIpO1xuICAgIFxuICAgICQoXCIjY29udGFjdC1mb3JtIC5idG4tc2l0ZVwiKS5vbiggXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcImNsaWNrIGV2ZW50OiAuY29udGFjdC1zdWJtaXQgYnV0dG9uXCIpO1xuICAgICAgICAkKCBcIiNjb250YWN0LWZvcm1cIiApLnN1Ym1pdCgpO1xuICAgIH0pO1xuXG4gICAgJChcIiNjb250YWN0LWZvcm1cIikuc3VibWl0KGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKFwiRm9ybSBzdWJtaXR0ZWQgbGlzdGVuZXIgY2FsbGVkXCIpO1xuXG4gICAgICAgIHZhciBpbnB1dEVsZW1lbnRzID0gJChcIiNjb250YWN0LWZvcm1cIikuZmluZCgnaW5wdXQsIHRleHRhcmVhLCBzZWxlY3QnKTtcbiAgICAgICAgdmFyIGZvcm1WYWx1ZXMgPSB7fTtcblxuICAgICAgICBpbnB1dEVsZW1lbnRzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5uYW1lKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudHlwZSA9PSBcImNoZWNrYm94XCIgfHwgdGhpcy50eXBlID09IFwicmFkaW9cIikge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtVmFsdWVzW3RoaXMubmFtZV0gPSB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmb3JtVmFsdWVzW3RoaXMubmFtZV0gPSB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhcImZvcm1WYWx1ZXMgOiBcIiArIEpTT04uc3RyaW5naWZ5KGZvcm1WYWx1ZXMpKTtcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBcImFzc2V0cy9waHAvaGFuZGxlYWpheGZvcm0ucGhwXCIsXG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YTogZm9ybVZhbHVlcyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJBSkFYIHBvc3QgcmVzdWx0IHJlc3VsdCA6IFwiICsgSlNPTi5zdHJpbmdpZnkocmVzdWx0KSk7XG5cbiAgICAgICAgICAgICAgICAkKCdkaXZbZGF0YS1lcnJvci1pZF0nKS50ZXh0KFwiXCIpO1xuICAgICAgICAgICAgICAgICQoJyNjb250YWN0LWZvcm0gaW5wdXQsICNjb250YWN0LWZvcm0gdGV4dGFyZWEnKS5yZW1vdmVDbGFzcygnZm9ybS1lcnJvcicpO1xuICAgICAgICAgICAgICAgICQoJyNzZW5kLXJlc3VsdCcpLnRleHQoXCJcIik7XG5cbiAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMocmVzdWx0LmVycm9ycykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpbnB1dE5hbWUgaW4gcmVzdWx0LmVycm9ycykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJlcnJvciBpbiBcIiArIGlucHV0TmFtZSArIFwiOiBcIiArIHJlc3VsdC5lcnJvcnNbaW5wdXROYW1lXSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2RpdltkYXRhLWVycm9yLWlkPVwiJyArIGlucHV0TmFtZSArICdcIl0nKS50ZXh0KHJlc3VsdC5lcnJvcnNbaW5wdXROYW1lXSkuaGlkZSgpLnNsaWRlRG93bigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnKltuYW1lPVwiJyArIGlucHV0TmFtZSArICdcIl0nKS5hZGRDbGFzcygnZm9ybS1lcnJvcicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnKltuYW1lPVwiJyArIGlucHV0TmFtZSArICdcIl0nKS5hbmltYXRlQ3NzKCdzaGFrZScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkFsbCB2YWxpZGF0aW9uIHBhc3NlZCBzdWNjZXNmdWxseSFcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgJChcIiNzZW5kLXJlc3VsdFwiKS50ZXh0KFwiVGhhbmsgeW91LiBZb3VyIG1lc3NhZ2UgaGFzIGJlZW4gc2VudC5cIik7XG4gICAgICAgICAgICAgICAgICAgICQoXCIjc2VuZC1yZXN1bHRcIikucmVtb3ZlQ2xhc3MoJ2FsZXJ0LWRhbmdlcicpLmFkZENsYXNzKCdhbGVydC1zdWNjZXNzJyk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAkKFwiI3NlbmQtcmVzdWx0XCIpLnNob3coKS5hbmltYXRlQ3NzKCdib3VuY2VJbicsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKCdpbnB1dCcpLnZhbChcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ3RleHRhcmVhJykudmFsKFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNzZW5kLXJlc3VsdFwiKS5kZWxheSg1MDAwKS5zbGlkZVVwKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJChcIiNzZW5kLXJlc3VsdFwiKS5yZW1vdmVDbGFzcygnYWxlcnQtc3VjY2VzcycpO1xuICAgICAgICAgICAgICAgICQoXCIjc2VuZC1yZXN1bHRcIikuYWRkQ2xhc3MoJ2FsZXJ0LWRhbmdlcicpO1xuICAgICAgICAgICAgICAgICQoXCIjc2VuZC1yZXN1bHRcIikudGV4dChcIlNvcnJ5Li4uIFlvdXIgbWVzc2FnZSBjb3VsZCBub3QgaGF2ZSBiZWVuIGRlbGl2ZXJlZC5cIik7XG4gICAgICAgICAgICAgICAgJChcIiNzZW5kLXJlc3VsdFwiKS5zbGlkZURvd24oKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH0pOyAgLy8gdGhlIGVuZCBvZiBhamF4IGNhbGwgdG8gcG9zdCBmb3JtVmFsdWVzXG4gICAgfSk7IC8vIHRoZSBlbmQgb2YgZm9ybSBzdWJtaXQgZnVuY3Rpb25cbiAgICBcbiAgICAvL2dsb2JhbC5pbml0Q29udGFjdEZvcm1MaXN0ZW5lciA9IGluaXRDb250YWN0Rm9ybUxpc3RlbmVyKCk7XG5cbn07IiwiLy8gLS0tLS0tLS0tLSBHT09HTEUgTUFQIC0tLS0tLS0tLS1cblxuXG4gIHZhciBteU1hcDtcbiAgdmFyIG15UG9zaXRpb24gPSB7bGF0OiA1MC4wNDg4MjIsIGxuZzogMTUuMjAwMjQyfTtcblxuICBmdW5jdGlvbiBpbml0Q29udGFjdE1hcCgpIHtcbiAgICBcbiAgICAvLyBTcGVjaWZ5IGZlYXR1cmVzIGFuZCBlbGVtZW50cyB0byBkZWZpbmUgc3R5bGVzLlxuICAgIHZhciBzdHlsZUFycmF5ID0gW1xuICAgIHtcbiAgICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcImFsbFwiLFxuICAgICAgICBcImVsZW1lbnRUeXBlXCI6IFwiYWxsXCIsXG4gICAgICAgIFwic3R5bGVyc1wiOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJzYXR1cmF0aW9uXCI6IC0xMDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJnYW1tYVwiOiAwLjVcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH1cbiAgXTtcblxuICAgIC8vIENyZWF0ZSBhIG1hcCBvYmplY3QgYW5kIHNwZWNpZnkgdGhlIERPTSBlbGVtZW50IGZvciBkaXNwbGF5LlxuICAgIHZhciBtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGFjdC1tYXBcIiksIHtcbiAgICAgICAgY2VudGVyOiBteVBvc2l0aW9uLFxuICAgICAgICBzY3JvbGx3aGVlbDogZmFsc2UsXG4gICAgICAgIHN0cmVldFZpZXdDb250cm9sOiB0cnVlLFxuICAgICAgICBzdHJlZXRWaWV3Q29udHJvbDoge1xuICAgICAgICAgIHBvc2l0aW9uOiBnb29nbGUubWFwcy5Db250cm9sUG9zaXRpb24uTEVGVF9CT1RUT01cbiAgICAgICAgfSxcbiAgICAgICAgbWFwVHlwZUNvbnRyb2w6IHRydWUsXG4gICAgICAgIG1hcFR5cGVDb250cm9sT3B0aW9uczoge1xuICAgICAgICAgICAgcG9zaXRpb246IGdvb2dsZS5tYXBzLkNvbnRyb2xQb3NpdGlvbi5CT1RUT01fTEVGVFxuICAgICAgICB9LFxuICAgICAgICB6b29tQ29udHJvbDogdHJ1ZSxcbiAgICAgICAgem9vbUNvbnRyb2xPcHRpb25zOiB7XG4gICAgICAgICAgcG9zaXRpb246IGdvb2dsZS5tYXBzLkNvbnRyb2xQb3NpdGlvbi5MRUZUX0NFTlRFUlxuICAgICAgICB9LFxuICAgICAgICAvLyBBcHBseSB0aGUgbWFwIHN0eWxlIGFycmF5IHRvIHRoZSBtYXAuXG4gICAgICAgIHN0eWxlczogc3R5bGVBcnJheSxcbiAgICAgICAgem9vbTogMTRcbiAgICB9KTtcblxuICAgIG15TWFwID0gbWFwO1xuICAgIC8vIENyZWF0ZSBhIG1hcmtlciBhbmQgc2V0IGl0cyBwb3NpdGlvbi5cbiAgICBcbiAgICB2YXIgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICBtYXA6IG1hcCxcbiAgICAgIHBvc2l0aW9uOiBteVBvc2l0aW9uLFxuICAgICAgdGl0bGU6ICdLYW1lbmljdHbDrSBFcmJlbicsXG4gICAgICBpY29uOiB7XG4gICAgICAgIHVybDogXCJhc3NldHMvaW1hZ2VzL0lFX2xvZ29fcm91bmRlZF9wb2ludGVyLnBuZ1wiLFxuICAgICAgICBzY2FsZWRTaXplOiBuZXcgZ29vZ2xlLm1hcHMuU2l6ZSgxNTAsIDE1MClcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICBteU1hcC5wYW5CeSgwLCgtJChcIm5hdi5uYXZiYXJcIikuaGVpZ2h0KCkpKTtcblxuICB9O1xuIiwiJChmdW5jdGlvbihnbG9iYWwpe1xuICAgIFxuICAgIC8vIHZhciBzY2VuZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYXJhbGxheC1zY2VuZScpO1xuICAgIC8vIHZhciBwYXJhbGxheCA9IG5ldyBQYXJhbGxheChzY2VuZSk7XG5cbiAgICAkKCcubG9hZGVyLXdyYXBwZXInKS5oaWRlKCk7XG4gICAgXG4gICAgdmFyIGJ0bkludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICQoXCIuYnRuLWRvd25cIikuYW5pbWF0ZUNzcyhcImJvdW5jZVwiKTtcbiAgICAgICAgfSwzMDAwKTtcblxuICAgIC8vIC0tLS0tLS0tLS0gSlFVRVJZIEFOSU1BVEUgRVhURU5TSU9OIC0tLS0tLS0tLS1cbiAgICAkLmZuLmV4dGVuZCh7XG4gICAgICAgIGFuaW1hdGVDc3M6IGZ1bmN0aW9uIChhbmltYXRpb25OYW1lLCBjYWxsQmFja0Z1bmMpIHtcbiAgICAgICAgICAgIHZhciBhbmltYXRpb25FbmQgPSAnd2Via2l0QW5pbWF0aW9uRW5kIG1vekFuaW1hdGlvbkVuZCBNU0FuaW1hdGlvbkVuZCBvYW5pbWF0aW9uZW5kIGFuaW1hdGlvbmVuZCc7XG4gICAgICAgICAgICB0aGlzLmFkZENsYXNzKCdhbmltYXRlZCAnICsgYW5pbWF0aW9uTmFtZSkub25lKGFuaW1hdGlvbkVuZCwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnYW5pbWF0ZWQgJyArIGFuaW1hdGlvbk5hbWUpO1xuICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24oY2FsbEJhY2tGdW5jKSkge1xuICAgICAgICAgICAgICAgICAgICBjYWxsQmFja0Z1bmMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBpbml0Q2Fyb3VzZWxzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiY2Fyb3VzZWxzIGluaXRpYWxpemVkXCIpO1xuICAgICAgICB2YXIgY2Fyb3VzZWxzU2V0dXAgPSBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYXJvdXNlbDogXCIjbWFpbi1jYXJvdXNlbFwiLFxuICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDo3MDAwLFxuICAgICAgICAgICAgICAgICAgICBwYXVzZTogXCJub25lXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2Fyb3VzZWw6IFwiI2Fib3V0LWNhcm91c2VsXCIsXG4gICAgICAgICAgICAgICAgICAgIGludGVydmFsOjUwMDAsXG4gICAgICAgICAgICAgICAgICAgIHBhdXNlOiBcIm5vbmVcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYXJvdXNlbDogXCIjY2Fyb3VzZWxUb21ic3RvbmVzXCIsXG4gICAgICAgICAgICAgICAgICAgIGludGVydmFsOjMwMDAsXG4gICAgICAgICAgICAgICAgICAgIHBhdXNlOiBcIm5vbmVcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYXJvdXNlbDogXCIjY2Fyb3VzZWxHYXJkZW5cIixcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWw6MzAwMCxcbiAgICAgICAgICAgICAgICAgICAgcGF1c2U6IFwibm9uZVwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhcm91c2VsOiBcIiNjYXJvdXNlbFJlc3RvcmF0aW9uc1wiLFxuICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDozMDAwLFxuICAgICAgICAgICAgICAgICAgICBwYXVzZTogXCJub25lXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2Fyb3VzZWw6IFwiI0Nhcm91c2VsTW9udW1lbnRzXCIsXG4gICAgICAgICAgICAgICAgICAgIGludGVydmFsOjMwMDAsXG4gICAgICAgICAgICAgICAgICAgIHBhdXNlOiBcIm5vbmVcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgICAvLyAtLS0tLS0tLS0tIENBUk9VU0VMUyBTRVRVUCAtLS0tLS0tLS0tXG4gICAgICAgIGZvciAodmFyIGk9MDsgaTxjYXJvdXNlbHNTZXR1cC5sZW5ndGgtMTtpKyspIHtcbiAgICAgICAgICAgICQoY2Fyb3VzZWxzU2V0dXBbaV1bJ2Nhcm91c2VsJ10pLmNhcm91c2VsKHtcbiAgICAgICAgICAgICAgICBpbnRlcnZhbDogY2Fyb3VzZWxzU2V0dXBbaV1bJ2ludGVydmFsJ11cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGdsb2JhbC5pbml0Q2Fyb3VzZWxzID0gaW5pdENhcm91c2VscztcblxufSh3aW5kb3cpKTtcblxuIiwiKGZ1bmN0aW9uKGdsb2JhbCwkKXtcblxuXHR2YXIgVVJMID0nLi9hc3NldHMvZGF0YS9sYW5nLmpzb24nO1xuXHR2YXIgc2l0ZUxhbmdzID0gW1wiY3pcIixcImVuXCJdO1xuXG5cdHZhciBMYW5nID0gZnVuY3Rpb24oYWN0aXZlTGFuZyl7XG5cdFx0cmV0dXJuIG5ldyBMYW5nLmluaXQoYWN0aXZlTGFuZyk7XG5cdH1cblxuXHRMYW5nLnByb3RvdHlwZSA9IHtcblx0XHRnZXRLZXlWYWw6IGZ1bmN0aW9uKGtleVZhbCl7XG5cdFx0XHRzZWxmID0gdGhpcztcblx0XHRcdHJldHVybiBmdW5jdGlvbigpe1xuXHRcdFx0XHRrZXlWYWwgPSBrZXlWYWwudHJpbSgpO1xuXHRcdFx0XHR2YXIgcmVzdWx0O1xuXHRcdFx0XHRmb3IgKHZhciBpPTA7IGkgPD0gTGFuZy5kYXRhLmxlbmd0aC0xOyBpKyspIHtcblx0XHRcdFx0XHRpZiAoTGFuZy5kYXRhW2ldLmRhdGF0YWc9PT1rZXlWYWwpIHtcblx0XHRcdFx0XHRcdHJlc3VsdCA9IExhbmcuZGF0YVtpXVtzZWxmLmFjdGl2ZUxhbmddO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmVzdWx0ID0gXCJcIjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdH0oKTtcblx0XHR9LFxuXHRcdHN3aXRjaExhbmc6IGZ1bmN0aW9uKHN3aXRjaFRvTGFuZyl7XG5cdFx0XHRzZWxmID0gdGhpcztcblx0XHRcdHZhciBudW1PZkxhbmdFbHMgPSAkKFwiW2RhdGEtbGFuZ11cIikubGVuZ3RoO1xuXHRcdFx0Zm9yICh2YXIgaSA9MDtpPD1udW1PZkxhbmdFbHMtMTtpKyspIHtcblx0XHRcdFx0dmFyIHJldHJpZXZlZERhdGFUYWcgPSAkKCQoXCJbZGF0YS1sYW5nXVwiKVtpXSkuZGF0YSgnbGFuZycpO1xuXHRcdFx0XHR2YWx1ZSA9IExORyQoc3dpdGNoVG9MYW5nKS5nZXRLZXlWYWwocmV0cmlldmVkRGF0YVRhZyk7XG5cdFx0XHRcdGlmICh2YWx1ZS50cmltKCkhPT1cIlwiKSB7XG5cdFx0XHRcdFx0aWYgKHZhbHVlLnNlYXJjaChcIjxwaD5cIik+LTEpIHtcblx0XHRcdFx0XHRcdHZhbHVlID0gdmFsdWUuc3Vic3RyKDQsdmFsdWUubGVuZ3RoKTtcblx0XHRcdFx0XHRcdCQoJChcIltkYXRhLWxhbmddXCIpW2ldKS5hdHRyKFwicGxhY2Vob2xkZXJcIix2YWx1ZSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdCQoJChcIltkYXRhLWxhbmddXCIpW2ldKS50ZXh0KExORyQoc3dpdGNoVG9MYW5nKS5nZXRLZXlWYWwocmV0cmlldmVkRGF0YVRhZykpLmFuaW1hdGVDc3MoJ3B1bHNlJyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdCQoJChcIltkYXRhLWxhbmddXCIpW2ldKS5jc3MoXCJ2aXNpYmlsaXR5XCIsXCJ2aXNpYmxlXCIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdH07XG5cblx0TGFuZy5pbml0ID0gZnVuY3Rpb24oYWN0aXZlTGFuZyl7XG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdHNlbGYuYWN0aXZlTGFuZyA9IGFjdGl2ZUxhbmcgfHwgc2l0ZUxhbmdzWzBdO1xuXHR9XG5cblx0TGFuZy5pbml0LnByb3RvdHlwZSA9IExhbmcucHJvdG90eXBlO1xuXHRnbG9iYWwuTGFuZyA9IGdsb2JhbC5MTkckID0gTGFuZztcblxuXHRnZXRTZXJ2ZXJEYXRhKFVSTCxmdW5jdGlvbihkYXRhKXtcblx0XHRMYW5nLmRhdGEgPSBkYXRhO1xuXHRcdHZhciBpbml0TGFuZyA9ICQoXCIubGFuZy1zd2l0Y2hlcj5zcGFuXCIpLnRleHQoKS50cmltKCk7XG5cdFx0TE5HJChpbml0TGFuZykuc3dpdGNoTGFuZyhpbml0TGFuZyk7XG5cdH0pO1xuXG5cdGZ1bmN0aW9uIGdldFNlcnZlckRhdGEodXJsLCBjYWxsYmFja0Z1bmMpIHtcblx0dmFyIHJlc3VsdCA9ICQuZ2V0SlNPTih1cmwsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdC8vY29uc29sZS5sb2coIFwiLS0tIHN1Y2Nlc3MgLS0tXCIgKTtcblx0XHRcdFx0fSlcblx0XHRcdFx0LmRvbmUoZnVuY3Rpb24oZGF0YSkge1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCBcImxhbmcgZGF0YSBsb2FkZWQuLi5cIiApO1xuXHRcdFx0XHRcdC8vY29uc29sZS5sb2coZGF0YSk7XG5cdFx0XHRcdFx0Y2FsbGJhY2tGdW5jKGRhdGEpO1xuXHRcdFx0XHR9KVxuXHRcdFx0XHQuZmFpbChmdW5jdGlvbihqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyggXCItLS0gZXJyb3IgLS0tXCIgKTtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhqcVhIUik7XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5hbHdheXMoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0Ly9jb25zb2xlLmxvZyggXCJjb21wbGV0ZVwiICk7XG5cdFx0XHRcdH0pO1xuXHR9O1xuXG59KHdpbmRvdywgalF1ZXJ5KSk7XG4iLCIvLyAtLS0tLS0tLS0tIE5BVklHQVRJT04gLS0tLS0tLS0tLVxuXG4kKGZ1bmN0aW9uKGdsb2JhbCl7XG5cdHZhciBjb250cm9sbGVyLCBwYXJhbGxheDEsIHBhcmFsbGF4Mjtcblx0Z2xvYmFsLm15U2l0ZSA9e307XG5cblx0ZnVuY3Rpb24gaXNfbW9iaWxlKCkge1xuXHQgICAgdmFyIGFnZW50cyA9IFsnYW5kcm9pZCcsICd3ZWJvcycsICdpcGhvbmUnLCAnaXBhZCcsICdibGFja2JlcnJ5J107XG5cdCAgICBmb3IoaSBpbiBhZ2VudHMpIHtcblx0ICAgICAgICBpZigobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLnNlYXJjaChhZ2VudHNbaV0pPi0xKSAmJiAod2luZG93Lm9yaWVudGF0aW9uIT09dW5kZWZpbmVkKSkge1xuXHQgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcblx0ICAgICAgICB9XG5cdCAgICB9XG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH07XG5cblx0dmFyIGlzTW9iaWxlRmxhZyA9IGlzX21vYmlsZSgpO1xuXHRnbG9iYWwubXlTaXRlLmlzTW9iaWxlRmxhZyA9IGlzTW9iaWxlRmxhZztcblxuXHQvL2NvbnNvbGUubG9nKFwiaXNNb2JpbGVGbGFnOiBcIitpc01vYmlsZUZsYWcpO1xuXG5cdGlmIChpc01vYmlsZUZsYWc9PT10cnVlKSB7XG5cdFx0JChcImJvZHlcIikuYWRkQ2xhc3MoXCJpc01vYmlsZVwiKTtcblx0fVxuXG5cdGZ1bmN0aW9uIG5hdk1lbnVJbml0KCkge1xuXHRcdFx0dmFyIGNhY2hlZFBhZ2U9e307XG5cdFx0XHQkY2FjaGVkSXRlbXMgPSAkKFwiI21haW5OYXZiYXIgW2RhdGEtbWVudWl0ZW1dXCIpO1xuXHRcdFx0JCgkY2FjaGVkSXRlbXMpLmVhY2goZnVuY3Rpb24oaW5kZXgsdmFsdWUpe1xuXHRcdFx0XHRjYWNoZWRQYWdlWyQodmFsdWUpLmRhdGEoJ21lbnVpdGVtJyldID0gXCJcIjtcblx0XHRcdH0pO1xuXHRcdFx0Z2xvYmFsLm15U2l0ZS5jYWNoZWRQYWdlID0gY2FjaGVkUGFnZTtcblxuXHRcdFx0cGxhY2VCdXR0b25Nb3ZlVXBMaXN0ZW5lcigpO1xuXHRcdFx0cGxhY2VMYW5nU3dpdGNoTGlzdGVuZXIodHJ1ZSk7XG5cblx0XHRcdC8vaGVscGVyIGZ1bmN0aW9uIHRvIGxvYWQgZ29vZ2xlIG1hcHMgc2NyaXB0XG5cdFx0XHRmdW5jdGlvbiBhZGRTY3JpcHQoIHNyYywgZWwsY2FsbGJhY2tGICkge1xuXHRcdFx0XHRpZiAodHlwZW9mIGNhbGxiYWNrRiE9PVwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdGNhbGxiYWNrRj1mdW5jdGlvbigpe307XG5cdFx0XHRcdH1cblx0XHRcdFx0JChlbCkuYXBwZW5kKCQoXCI8c2NyaXB0IC8+XCIsIHtcbiAgXHRcdFx0XHRzcmM6IHNyYyxcblx0XHRcdFx0XHRhc3luYzogdHJ1ZSxcblx0XHRcdFx0XHRkZWZlcjogdHJ1ZVxuXHRcdFx0XHR9KSk7XG5cdFx0XHRcdGNhbGxiYWNrRigpO1xuXHRcdFx0fVxuXHRcdFx0Ly9oZWxwZXIgZnVuY3Rpb24gdG8gdXBkYXRlIHRoZSBwYWdlIHdoZW4gY2xpY2tpbmcgb24gbWVudVxuXHRcdFx0ZnVuY3Rpb24gdXBkYXRlUGFnZShjYWxsYmFja0Z1bmMpe1xuXHRcdFx0XHRpZiAodHlwZW9mIGNhbGxiYWNrRnVuYyE9PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRcdFx0XHRjYWxsYmFja0Z1bmMgPSBmdW5jdGlvbigpe307XG5cdFx0XHRcdH1cblx0XHRcdFx0JCgnI2FqYXgtY29udGFpbmVyJykuc2hvdygpO1xuXHRcdFx0XHQkKCcjYWpheC1jb250ZW50JykuaGlkZSgpO1xuXHRcdFx0XHQkKCcubG9hZGVyLXdyYXBwZXInKS5oaWRlKCk7XG5cdFx0XHRcdCQoJyNhamF4LWNvbnRlbnQnKS5zaG93KCk7XG5cdFx0XHRcdCQoJyNhamF4LWNvbnRlbnQnKS5mYWRlSW4oNTAwLGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0Y2FsbGJhY2tGdW5jKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXG5cdFx0ICAkKCcjbWFpbk5hdmJhcicpLm9uKCdzaG93LmJzLmNvbGxhcHNlJywgZnVuY3Rpb24gKCkge1xuXHQgIFx0XHRcdCQoXCIuaGFtYnVyZ2VyX19tZW51LWljb25cIikuYWRkQ2xhc3MoXCJoYW1idXJnZXJfX21lbnUtaWNvbi0tY2xvc2UteFwiKTtcblx0XHRcdH0pXG5cdCBcdFx0JCgnI21haW5OYXZiYXInKS5vbignaGlkZS5icy5jb2xsYXBzZScsIGZ1bmN0aW9uICgpIHtcblx0ICBcdFx0XHQkKFwiLmhhbWJ1cmdlcl9fbWVudS1pY29uXCIpLnJlbW92ZUNsYXNzKFwiaGFtYnVyZ2VyX19tZW51LWljb24tLWNsb3NlLXhcIik7XG5cdFx0XHR9KVxuXG5cdCAgICAkKCcubmF2LWxpbmsnKS5vbiggJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuXHQgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblx0ICAgICAgICB2YXIgdXJsID0gdGhpcy5ocmVmLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuXHQgICAgICAgIHZhciBtZW51TmFtZSA9ICQodGhpcykuZGF0YSgnbWVudWl0ZW0nKS50cmltKCkudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHR2YXIgaW5pdExhbmcgPSAkKFwiLmxhbmctc3dpdGNoZXI+c3BhblwiKS50ZXh0KCkudHJpbSgpO1xuXG5cdCAgICAgICAgJCh0aGlzKS5zaWJsaW5ncyhcIi5uYXYtbGlua1wiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcblx0ICAgICAgICAkKHRoaXMpLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuXG5cdFx0XHRcdFx0aWYgKGNvbnRyb2xsZXIhPT11bmRlZmluZWQgJiYgY29udHJvbGxlciE9PW51bGwpIHtcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXIgPSBjb250cm9sbGVyLmRlc3Ryb3kodHJ1ZSk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly9jbG9zZSB0aGUgbW9iaWxlIG1lbnUgaWYgaXQgaXMgb3BlbmVkXG5cdFx0XHRcdFx0JCgnI21haW5OYXZiYXInKS5jb2xsYXBzZSgnaGlkZScpO1xuXG5cdCAgICAgICAgJCgnLmxvYWRlci13cmFwcGVyJykuc2hvdygpO1xuXHQgICAgICAgICQoJyNhamF4LWNvbnRhaW5lcicpLmZhZGVPdXQoNTAwLCBmdW5jdGlvbigpe1xuXG5cdCAgICAgICAgXHQkKFwiYm9keSxodG1sXCIpLnN0b3AoKS5hbmltYXRlKHtzY3JvbGxUb3A6MH0sICc1MCcpO1xuXHRcdFx0XHRcdFx0JCh0aGlzKS5yZW1vdmUoKTtcblxuXHRcdFx0XHRcdFx0aWYgKG15U2l0ZS5jYWNoZWRQYWdlW21lbnVOYW1lXT09PScnKSB7XG5cdFx0XHRcdFx0XHRcdC8vIGRvIHRoZSBmb2xsb3dpbmcgaWYgdGhlIHBhZ2UgbmVlZHMgdG8gYmUgbGFvZGVkIGZvciB0aGUgZmlyc3QgdGltZShub3QgY2FjaGVkIHlldClcblx0XHRcdFx0XHRcdFx0Ly8gc3RhcnQgb2YgdGhlIGFqYXggbG9hZCBmdW5jdGlvblxuXHRcdCAgICAgICAgXHQkKCcjYWpheC1jb250ZW50JykubG9hZCh1cmwgKyAnICNhamF4LWNvbnRhaW5lcicsIGZ1bmN0aW9uKHJlc3VsdCxzdGF0dXMpe1xuXHRcdFx0XHRcdFx0XHRcdGlmIChzdGF0dXMgPT09IFwic3VjY2Vzc1wiKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIkxvYWRlZCAnXCIgKyBtZW51TmFtZSArIFwiJyBmcm9tIFNFUlZFUi4uLlwiKTtcblx0XHRcdFx0XHRcdFx0XHRcdHVwZGF0ZVBhZ2UoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0XHRcdFx0TE5HJChpbml0TGFuZykuc3dpdGNoTGFuZyhpbml0TGFuZyk7XG5cdFx0XHRcdFx0XHRcdFx0XHR9KTtcblxuXHRcdFx0ICAgICAgICBcdFx0aWYgKG1lbnVOYW1lPT09XCJyZWFsaXNhdGlvbnNcIikge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRjYWNoZWRQYWdlW21lbnVOYW1lXT0kKHJlc3VsdCkuZmluZChcIiNhamF4LWNvbnRhaW5lclwiKTtcblx0XHRcdCAgICAgICAgXHRcdFx0aW5pdENvbW1pc2lvbnNHYWxsZXJ5KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRMTkckKGluaXRMYW5nKS5zd2l0Y2hMYW5nKGluaXRMYW5nKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHQgICAgICAgIFx0XHR9IGVsc2UgaWYgKG1lbnVOYW1lPT09XCJjb250YWN0XCIpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2FjaGVkUGFnZVttZW51TmFtZV09JChyZXN1bHQpLmZpbmQoXCIjYWpheC1jb250YWluZXJcIik7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGFkZFNjcmlwdCggLy8ga2FtZW5pY3R2aS1lcmJlbi5jeiBnb29nbGUgbWFwcyBrZXkgPVwiQUl6YVN5RHNTVTg0V29peHZ2Q1o2RVY0OEJ0MTc3N04yTkxLSG1zXCJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcImh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9qcz9rZXk9QUl6YVN5QTBxVktwbmRmY29JZ1A1bnd1SnhtSDVxMHY1VFN2RWM0JmNhbGxiYWNrPWluaXRDb250YWN0TWFwXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XCJib2R5XCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCQoZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCAgICQod2luZG93KS5sb2FkKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0IFx0aW5pdENvbnRhY3RNYXAoKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGluaXRDb250YWN0Rm9ybUxpc3RlbmVyKCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwbGFjZUNvbnRhY3RMaXN0ZW5lcnMoKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCAgIH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblxuXHRcdFx0ICAgICAgICBcdFx0fSBlbHNlIGlmIChtZW51TmFtZT09PVwibWFpblwiKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNhY2hlZFBhZ2VbbWVudU5hbWVdPSQocmVzdWx0KS5maW5kKFwiI2FqYXgtY29udGFpbmVyXCIpO1xuXHRcdFx0ICAgICAgICBcdFx0XHRpbml0Q2Fyb3VzZWxzKCk7XG5cdFx0XHQgICAgICAgIFx0XHRcdGxpbmtUb0dhbGxlcnkoKTtcblx0XHRcdCAgICAgICAgXHRcdFx0aWYgKCFpc01vYmlsZUZsYWcpIHtcblx0XHRcdFx0XHRcdCAgICAgICAgXHRjb250cm9sbGVyID0gbmV3IFNjcm9sbE1hZ2ljLkNvbnRyb2xsZXIoe2dsb2JhbFNjZW5lT3B0aW9uczoge3RyaWdnZXJIb29rOiBcIm9uRW50ZXJcIiwgZHVyYXRpb246IFwiMTAwJVwifX0pO1xuXHRcdFx0XHRcdFx0ICAgICAgICBcdHBhcmFsbGF4MSA9IG5ldyBTY3JvbGxNYWdpYy5TY2VuZSh7dHJpZ2dlckVsZW1lbnQ6IFwiI3BhcmFsbGF4MVwifSlcblx0XHRcdFx0XHRcdCAgICAgICAgICAgIFx0LnNldFR3ZWVuKFwiI3BhcmFsbGF4MSA+IGRpdlwiLCB7eTogXCI1MCVcIiwgZWFzZTogTGluZWFyLmVhc2VOb25lfSlcblx0XHRcdFx0XHRcdCAgICAgICAgICAgIFx0Ly8uYWRkSW5kaWNhdG9ycygpXG5cdFx0XHRcdFx0XHQgICAgICAgICAgICBcdC5hZGRUbyhjb250cm9sbGVyKTtcblx0XHRcdFx0XHRcdCAgICAgICAgfVxuXG5cdFx0XHQgICAgICAgIFx0XHR9IGVsc2UgaWYgKG1lbnVOYW1lPT09XCJhYm91dFwiKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNhY2hlZFBhZ2VbbWVudU5hbWVdPSQocmVzdWx0KS5maW5kKFwiI2FqYXgtY29udGFpbmVyXCIpO1xuXHRcdFx0ICAgICAgICBcdFx0XHRpbml0Q2Fyb3VzZWxzKCk7XG5cdFx0XHQgICAgICAgIFx0XHRcdGlmICghaXNNb2JpbGVGbGFnKSB7XG5cdFx0XHRcdCAgICAgICAgXHRcdFx0Y29udHJvbGxlciA9IG5ldyBTY3JvbGxNYWdpYy5Db250cm9sbGVyKHtnbG9iYWxTY2VuZU9wdGlvbnM6IHt0cmlnZ2VySG9vazogXCJvbkVudGVyXCIsIGR1cmF0aW9uOiBcIjEwMCVcIn19KTtcblx0XHRcdFx0ICAgICAgICBcdFx0XHRwYXJhbGxheDIgPSBuZXcgU2Nyb2xsTWFnaWMuU2NlbmUoe3RyaWdnZXJFbGVtZW50OiBcIiNwYXJhbGxheDJcIn0pXG5cdFx0XHRcdFx0XHRcdFx0ICAgIFx0LnNldFR3ZWVuKFwiI3BhcmFsbGF4MiA+IGRpdlwiLCB7eTogXCI1MCVcIiwgZWFzZTogTGluZWFyLmVhc2VOb25lfSlcblx0XHRcdFx0XHRcdFx0XHQgICAgXHQvLy5hZGRJbmRpY2F0b3JzKClcblx0XHRcdFx0XHRcdFx0XHQgICAgXHQuYWRkVG8oY29udHJvbGxlcik7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdCAgICAgICAgXHRcdH0gZWxzZSBpZiAobWVudU5hbWU9PT1cInByaWNpbmdcIikge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRjYWNoZWRQYWdlW21lbnVOYW1lXT0kKHJlc3VsdCkuZmluZChcIiNhamF4LWNvbnRhaW5lclwiKTtcblx0XHRcdCAgICAgICAgXHRcdFx0aW5pdFByaWNpbmdHYWxsZXJ5KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0TE5HJChpbml0TGFuZykuc3dpdGNoTGFuZyhpbml0TGFuZyk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0ICAgICAgICBcdFx0fVxuXHRcdCAgICAgICAgXHRcdH0gZWxzZSBpZiAoc3RhdHVzID09PSBcImVycm9yXCIpIHtcblx0XHQgICAgICAgIFx0XHRcdCQoJy5sb2FkZXItd3JhcHBlcicpLmhpZGUoKTtcblx0XHQgICAgICAgIFx0XHRcdGNvbnNvbGUubG9nKFwiRXJyb3IgbG9hZGluZyBmcm9tIHNlcnZlci4uLlwiKTtcblx0XHQgICAgICAgIFx0XHR9XG5cblx0XHQgICAgICAgIFx0fSk7IC8vIGVuZCBvZiBhamF4IGxvYWQgZnVuY3Rpb25cblxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Ly9pZiB0aGUgcGFnZSBpcyBhbHJlYWR5IGNhY2hlZC4uLlxuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIkxvYWRlZCAnXCIgKyBtZW51TmFtZSArIFwiJyBmcm9tIENBQ0hFLi4uXCIpO1xuXHRcdFx0XHRcdFx0XHQkKG15U2l0ZS5jYWNoZWRQYWdlW21lbnVOYW1lXSkuYXBwZW5kVG8oJyNhamF4LWNvbnRlbnQnKTtcblxuXHRcdFx0XHRcdFx0XHR1cGRhdGVQYWdlKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdFx0TE5HJChpbml0TGFuZykuc3dpdGNoTGFuZyhpbml0TGFuZyk7XG5cdFx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHR9XG5cdCAgICAgICAgfSk7ICAvLyBlbmQgb2YgYW5pbWF0ZUNzcyBmdW5jdGlvblxuXG5cdCAgICB9KTsgLy8gZW5kIG9mIGNsaWNrIGxpc3RlbmVyXG5cblx0fVxuXG5cdGZ1bmN0aW9uIHBsYWNlQ29udGFjdExpc3RlbmVycygpIHtcblx0XHQkKFwiLmJ0bi1tYXBcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbihlKXtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdHZhciAkdGhpcz0kKHRoaXMpO1xuXG5cdFx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9yaWVudGF0aW9uY2hhbmdlXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoJHRoaXMuY2hpbGRyZW4oKS5oYXNDbGFzcyhcImZhLWV4cGFuZFwiKSkge1xuXHRcdFx0XHRcdGlmICh3aW5kb3cubWF0Y2hNZWRpYShcIihvcmllbnRhdGlvbjogbGFuZHNjYXBlKVwiKS5tYXRjaGVzICYmIHdpbmRvdy5pbm5lcldpZHRoPDc2Nykge1xuXHRcdFx0XHRcdFx0JChcIiNjb250YWN0LW1hcFwiKS5hbmltYXRlKHtcblx0XHRcdFx0XHRcdFx0aGVpZ2h0OiBcIjc1dmhcIlxuXHRcdFx0XHRcdFx0fSw1MDAsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRcdGdvb2dsZS5tYXBzLmV2ZW50LnRyaWdnZXIobXlNYXAsIFwicmVzaXplXCIpO1xuXHRcdFx0XHRcdFx0XHRteU1hcC5zZXRDZW50ZXIobXlQb3NpdGlvbik7XG5cdFx0XHRcdFx0XHRcdG15TWFwLnBhbkJ5KDAsKC0kKFwibmF2Lm5hdmJhclwiKS5oZWlnaHQoKSkpO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdCQoXCIjY29udGFjdC1tYXBcIikuYW5pbWF0ZSh7XG5cdFx0XHRcdFx0XHRcdGhlaWdodDogXCI1MHZoXCJcblx0XHRcdFx0XHRcdH0sNTAwLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRnb29nbGUubWFwcy5ldmVudC50cmlnZ2VyKG15TWFwLCBcInJlc2l6ZVwiKTtcblx0XHRcdFx0XHRcdFx0bXlNYXAuc2V0Q2VudGVyKG15UG9zaXRpb24pO1xuXHRcdFx0XHRcdFx0XHRteU1hcC5wYW5CeSgwLCgtJChcIm5hdi5uYXZiYXJcIikuaGVpZ2h0KCkpKTtcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSwgZmFsc2UpO1xuXG5cdFx0XHRpZiAoJHRoaXMuY2hpbGRyZW4oKS5oYXNDbGFzcyhcImZhLWV4cGFuZFwiKSkge1xuXHRcdFx0XHQkdGhpcy5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKFwiZmEtZXhwYW5kXCIpLmFkZENsYXNzKFwiZmEtY29tcHJlc3NcIik7XG5cdFx0XHRcdCQoXCIjY29udGFjdC1tYXBcIikuYW5pbWF0ZSh7XG5cdFx0XHRcdFx0aGVpZ2h0OiBcIjEwMHZoXCJcblx0XHRcdFx0fSw1MDAsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0Z29vZ2xlLm1hcHMuZXZlbnQudHJpZ2dlcihteU1hcCwgXCJyZXNpemVcIik7XG5cdFx0XHRcdFx0bXlNYXAuc2V0Q2VudGVyKG15UG9zaXRpb24pO1xuXHRcdFx0XHRcdG15TWFwLnBhbkJ5KDAsKC0kKFwibmF2Lm5hdmJhclwiKS5oZWlnaHQoKSkpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fSBlbHNlIGlmICgkdGhpcy5jaGlsZHJlbigpLmhhc0NsYXNzKFwiZmEtY29tcHJlc3NcIikpIHtcblx0XHRcdFx0JHRoaXMuY2hpbGRyZW4oKS5yZW1vdmVDbGFzcyhcImZhLWNvbXByZXNzXCIpLmFkZENsYXNzKFwiZmEtZXhwYW5kXCIpO1xuXHRcdFx0XHRpZiAod2luZG93Lm1hdGNoTWVkaWEoXCIob3JpZW50YXRpb246IGxhbmRzY2FwZSlcIikubWF0Y2hlcyAmJiB3aW5kb3cuaW5uZXJXaWR0aDw3NjcpIHtcblx0XHRcdFx0XHQkKFwiI2NvbnRhY3QtbWFwXCIpLmFuaW1hdGUoe1xuXHRcdFx0XHRcdFx0aGVpZ2h0OiBcIjc1dmhcIlxuXHRcdFx0XHRcdH0sNTAwLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0Z29vZ2xlLm1hcHMuZXZlbnQudHJpZ2dlcihteU1hcCwgXCJyZXNpemVcIik7XG5cdFx0XHRcdFx0XHRteU1hcC5zZXRDZW50ZXIobXlQb3NpdGlvbik7XG5cdFx0XHRcdFx0XHRteU1hcC5wYW5CeSgwLCgtJChcIm5hdi5uYXZiYXJcIikuaGVpZ2h0KCkpKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQkKFwiI2NvbnRhY3QtbWFwXCIpLmFuaW1hdGUoe1xuXHRcdFx0XHRcdFx0aGVpZ2h0OiBcIjUwdmhcIlxuXHRcdFx0XHRcdH0sNTAwLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0Z29vZ2xlLm1hcHMuZXZlbnQudHJpZ2dlcihteU1hcCwgXCJyZXNpemVcIik7XG5cdFx0XHRcdFx0XHRteU1hcC5zZXRDZW50ZXIobXlQb3NpdGlvbik7XG5cdFx0XHRcdFx0XHRteU1hcC5wYW5CeSgwLCgtJChcIm5hdi5uYXZiYXJcIikuaGVpZ2h0KCkpKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pXG5cdH1cblxuXHRmdW5jdGlvbiBwbGFjZUJ1dHRvbk1vdmVVcExpc3RlbmVyKCkge1xuXG5cdFx0dmFyIG9mZlNldFk9MDtcblx0XHQkKHdpbmRvdykub24oXCJzY3JvbGxcIiwgZnVuY3Rpb24oKXtcblx0XHRcdHZhciBhY3R1YWxIZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCk7XG5cdFx0XHR2YXIgYWN0dWFsU2Nyb2xsUG9zID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xuXG5cdFx0XHRvZmZTZXRZID0gYWN0dWFsSGVpZ2h0LzU7XG5cblx0XHRcdGlmIChhY3R1YWxTY3JvbGxQb3M8MCkge2FjdHVhbFNjcm9sbFBvcz0wfTtcblxuXHRcdFx0Ly9jb25zb2xlLmxvZyhhY3R1YWxIZWlnaHQsYWN0dWFsU2Nyb2xsUG9zKTtcblx0XHRcdC8vY29uc29sZS5sb2coYWN0dWFsSGVpZ2h0LW9mZlNldFksYWN0dWFsU2Nyb2xsUG9zKTtcblxuXHRcdFx0aWYgKCgoYWN0dWFsSGVpZ2h0LW9mZlNldFkpL2FjdHVhbFNjcm9sbFBvcyk+MSkge1xuXHRcdFx0XHRpZiAoJCgnLmJ0bi1tb3ZlLXVwJykuaXMoXCI6dmlzaWJsZVwiKSkge1xuXHRcdFx0XHRcdCQoXCIuYnRuLW1vdmUtdXBcIikuYW5pbWF0ZUNzcygnYm91bmNlT3V0JywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdCQoXCIuYnRuLW1vdmUtdXBcIikuaGlkZSgpO1xuXHRcdFx0XHRcdFx0JChcIi5idG4tZG93blwiKS5zaG93KCkuYW5pbWF0ZUNzcygnYm91bmNlSW4nKTtcblx0XHRcdFx0XHRcdC8vJChcIi5idG4tZG93blwiKS5hbmltYXRlQ3NzKCdib3VuY2VJbicpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmICghJCgnLmJ0bi1tb3ZlLXVwJykuaXMoXCI6dmlzaWJsZVwiKSkge1xuIFx0XHRcdFx0XHQkKFwiLmJ0bi1kb3duXCIpLmFuaW1hdGVDc3MoJ2JvdW5jZU91dCcsZnVuY3Rpb24oKXtcbiBcdFx0XHRcdFx0XHQkKFwiLmJ0bi1kb3duXCIpLmhpZGUoKTtcbiBcdFx0XHRcdFx0XHQkKFwiLmJ0bi1tb3ZlLXVwXCIpLnNob3coKTtcbiBcdFx0XHRcdFx0XHQkKFwiLmJ0bi1tb3ZlLXVwXCIpLmFuaW1hdGVDc3MoJ2JvdW5jZUluJyk7XG4gXHRcdFx0XHRcdH0pO1xuIFx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdCQoXCIuYnRuLW1vdmUtdXBcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbigpe1xuXHRcdFx0JChcImJvZHksaHRtbFwiKS5zdG9wKCkuYW5pbWF0ZSh7c2Nyb2xsVG9wOjB9LCAnNzAwJywgXCJzd2luZ1wiKTtcblx0XHR9KTtcblx0XHQkKFwiLmJ0bi1kb3duXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSl7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR2YXIganVtcEhhc2ggPSBlLmN1cnJlbnRUYXJnZXQuaGFzaDtcblx0XHRcdHZhciBqdW1wUG9pbnQgPSAkKGp1bXBIYXNoKS5vZmZzZXQoKS50b3A7XG5cdFx0XHQkKFwiYm9keSxodG1sXCIpLnN0b3AoKS5hbmltYXRlKHtzY3JvbGxUb3A6anVtcFBvaW50fSwgJzcwMCcsIFwic3dpbmdcIik7XG5cdFx0fSk7XG5cblx0fVxuXG5cdGZ1bmN0aW9uIHBsYWNlTGFuZ1N3aXRjaExpc3RlbmVyKHVwZGF0ZSkge1xuXHRcdHZhciB1cGRhdGUgPSB1cGRhdGUgfHwgZmFsc2U7XG5cdFx0dmFyIGFjdGl2ZUxhbmd1YWdlcyA9W107XG5cdFx0dmFyIGxhbmd1YWdlcyA9IHtcblx0XHRcdFwiY3pcIjpmYWxzZSxcblx0XHRcdFwiZnJcIjpmYWxzZSxcblx0XHRcdFwiZW5cIjp0cnVlLFxuXHRcdFx0XCJkZVwiOnRydWUsXG5cdFx0XHRcImVzXCI6ZmFsc2Vcblx0XHR9O1xuXHRcdCQuZWFjaChsYW5ndWFnZXMsIGZ1bmN0aW9uKGluZGV4LHZhbHVlKXtcblx0XHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0XHRhY3RpdmVMYW5ndWFnZXMucHVzaChpbmRleCk7XG5cdFx0XHR9XG5cdFx0fSlcblx0XHR2YXIgYWN0aXZlTGFuZyA9ICQoXCIubGFuZy1zd2l0Y2hlcj5zcGFuXCIpLnRleHQoKS50cmltKCk7XG5cdFx0aWYgKHVwZGF0ZSkge1xuXHRcdFx0TE5HJChhY3RpdmVMYW5nKS5zd2l0Y2hMYW5nKGFjdGl2ZUxhbmcpO1xuXHRcdH1cblxuXHRcdCQoXCIubGFuZy1zd2l0Y2hlcj5zcGFuXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oKXtcblx0XHRcdHZhciBuZXh0ID0gYWN0aXZlTGFuZ3VhZ2VzLmluZGV4T2YoYWN0aXZlTGFuZykrMTtcblx0XHRcdGlmICghaXNMYW5nRGVmaW5lZChhY3RpdmVMYW5ndWFnZXMsYWN0aXZlTGFuZykpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0bmV4dCA9PT0gYWN0aXZlTGFuZ3VhZ2VzLmxlbmd0aCA/IG5leHQ9MCA6IG5leHQ9bmV4dDtcblx0XHRcdGFjdGl2ZUxhbmcgPSBhY3RpdmVMYW5ndWFnZXNbbmV4dF07XG5cdFx0XHQkKFwiLmxhbmctc3dpdGNoZXI+c3BhblwiKS50ZXh0KGFjdGl2ZUxhbmcpO1xuXHRcdFx0TE5HJChhY3RpdmVMYW5nKS5zd2l0Y2hMYW5nKGFjdGl2ZUxhbmcpO1xuXHRcdFx0JCh0aGlzKS5hbmltYXRlQ3NzKFwiYm91bmNlSW5cIik7XG5cdFx0fSk7XG5cblx0XHRmdW5jdGlvbiBpc0xhbmdEZWZpbmVkKGFjdGl2ZUxhbmdzLGxhbmdUb0NoZWNrKXtcblx0XHRcdGlmICh0eXBlb2YgYWN0aXZlTGFuZ3MgIT09J29iamVjdCcpIHtcblx0XHRcdFx0YWN0aXZlTGFuZ3MgPSBhY3RpdmVMYW5ncyB8fCBbXTtcblx0XHRcdH1cblx0XHRcdGlmICh0eXBlb2YgbGFuZ1RvQ2hlY2sgIT09J3N0cmluZycpIHtcblx0XHRcdFx0bGFuZ1RvQ2hlY2sgPSBsYW5nVG9DaGVjayB8fCBcIlwiO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGlzRGVmaW5lZCA9IGZhbHNlO1xuXHRcdFx0dmFyIGluZCA9IGFjdGl2ZUxhbmdzLmluZGV4T2YoYWN0aXZlTGFuZyk7XG5cdFx0XHRpZiAoaW5kID09PSAtMSkge1xuXHRcdFx0XHRjb25zb2xlLmxvZyhcImVycm9yOiBsYW5ndWFnZTogJ1wiKyBsYW5nVG9DaGVjayArXCInIHdpdGhpbiAnaW5kZXguaHRtbCcgZmlsZSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGxhbmd1YWdlcyBkZWZpbmVkLlwiKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlzRGVmaW5lZCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gaXNEZWZpbmVkO1xuXHRcdH1cblx0fVxuXG5cdGZ1bmN0aW9uIGxpbmtUb0dhbGxlcnkoKXtcblxuXHRcdCQoXCIuYnRuLXNpdGVcIikub24oJ2NsaWNrJyxmdW5jdGlvbihlKXtcblx0XHRcdGUucHJldmVudERlZmF1bHQ7XG5cdFx0XHR2YXIgZ2FsTGluayA9ICQodGhpcykuZGF0YSgnbGluaycpLnRyaW0oKTtcblx0XHRcdHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcblx0XHRcdGlmICh1cmwuc2VhcmNoKFwiaW5kZXguaHRtbFwiKSA+PSAwICkge1xuXHRcdFx0XHR1cmwgPSB1cmwucmVwbGFjZShcImluZGV4Lmh0bWxcIixcInJlYWxpc2F0aW9ucy5odG1sXCIpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dXJsID0gdXJsICsgXCJyZWFsaXNhdGlvbnMuaHRtbFwiO1xuXHRcdFx0fVxuXG5cdCAgICAgICAgJCgnI2FqYXgtY29udGFpbmVyJykuYW5pbWF0ZUNzcygnZmFkZU91dERvd24nLCBmdW5jdGlvbigpe1xuXHQgICAgICAgIFx0JCgnI2FqYXgtY29udGVudCcpLmhpZGUoKTtcblx0ICAgICAgICBcdCQoJyNhamF4LWNvbnRlbnQnKS5sb2FkKHVybCArICcgI2FqYXgtY29udGFpbmVyJywgZnVuY3Rpb24oKXtcblx0ICAgICAgICBcdFx0JChcIi5uYXZiYXItbmF2Pi5uYXYtbGlua1wiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcblx0ICAgICAgICBcdFx0JChcIi5uYXZiYXItbmF2Pi5uYXYtbGlua1tocmVmPSdyZWFsaXNhdGlvbnMuaHRtbCddXCIpLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuXG5cdCAgICAgICAgXHRcdCQoJyNhamF4LWNvbnRlbnQnKS5zaG93KCk7XG5cdCAgICAgICAgXHRcdCQoJyNhamF4LWNvbnRlbnQnKS5hbmltYXRlQ3NzKCdmYWRlSW5VcCcpO1xuXHQgICAgICAgIFx0XHRwbGFjZUNvbnRhY3RMaXN0ZW5lcnMoKTtcblx0ICAgICAgICBcdFx0cGxhY2VCdXR0b25Nb3ZlVXBMaXN0ZW5lcigpO1xuXHQgICAgICAgIFx0XHRwbGFjZUxhbmdTd2l0Y2hMaXN0ZW5lcigpO1xuXHQgICAgICAgIFx0XHRpbml0Q29tbWlzaW9uc0dhbGxlcnkoZnVuY3Rpb24oKXtcblx0XHQgICAgICAgIFx0XHQkKFwiLmZpbHRlci1pdGVtXCIpLmVhY2goZnVuY3Rpb24oaSl7XG5cdFx0ICAgICAgICBcdFx0XHRpZiAoJCh0aGlzKS50ZXh0KCkudG9Mb3dlckNhc2UoKS50cmltKCkgPT09IGdhbExpbmspIHtcblx0XHQgICAgICAgIFx0XHRcdFx0JCh0aGlzKS50cmlnZ2VyKCdjbGljaycpO1xuXHRcdCAgICAgICAgXHRcdFx0XHRyZXR1cm47XG5cdFx0ICAgICAgICBcdFx0XHR9XG5cdFx0ICAgICAgICBcdFx0fSk7XG5cblx0ICAgICAgICBcdFx0fSk7XG5cdCAgICAgICAgXHR9KTtcblx0ICAgICAgICB9KTtcblx0XHR9KTtcblx0fVxuXG5cdGZ1bmN0aW9uIGluaXRQYXJhbGxheCgpIHtcblx0XHRpZiAoIWlzTW9iaWxlRmxhZykge1xuXHQgICAgICAgIHZhciBjb250cm9sbGVyID0gbmV3IFNjcm9sbE1hZ2ljLkNvbnRyb2xsZXIoe2dsb2JhbFNjZW5lT3B0aW9uczoge3RyaWdnZXJIb29rOiBcIm9uRW50ZXJcIiwgZHVyYXRpb246IFwiMTAwJVwifX0pO1xuXHQgICAgICAgIHZhciBwYXJhbGxheDEgPSBuZXcgU2Nyb2xsTWFnaWMuU2NlbmUoe3RyaWdnZXJFbGVtZW50OiBcIiNwYXJhbGxheDFcIn0pXG5cdCAgICAgICAgICAgIC5zZXRUd2VlbihcIiNwYXJhbGxheDEgPiBkaXZcIiwge3k6IFwiNTAlXCIsIGVhc2U6IExpbmVhci5lYXNlTm9uZX0pXG5cdCAgICAgICAgICAgIC8vLmFkZEluZGljYXRvcnMoKVxuXHQgICAgICAgICAgICAuYWRkVG8oY29udHJvbGxlcik7XG5cdCAgICB9XG5cdH1cblxuXHQkKHdpbmRvdykubG9hZChmdW5jdGlvbigpe1xuXHRcdGxpbmtUb0dhbGxlcnkoKTtcblx0XHRuYXZNZW51SW5pdCgpO1xuXHRcdHBsYWNlQ29udGFjdExpc3RlbmVycygpO1xuXHRcdHBsYWNlQnV0dG9uTW92ZVVwTGlzdGVuZXIoKTtcblx0XHRwbGFjZUxhbmdTd2l0Y2hMaXN0ZW5lcigpO1xuXHRcdGluaXRQYXJhbGxheCgpO1xuXHR9KTtcblxuXG5cdGdsb2JhbC5teVNpdGUubmF2TWVudUluaXQgPSBuYXZNZW51SW5pdDtcblx0Z2xvYmFsLm15U2l0ZS5wbGFjZUNvbnRhY3RMaXN0ZW5lcnMgPSBwbGFjZUNvbnRhY3RMaXN0ZW5lcnM7XG5cdGdsb2JhbC5teVNpdGUucGxhY2VCdXR0b25Nb3ZlVXBMaXN0ZW5lciA9IHBsYWNlQnV0dG9uTW92ZVVwTGlzdGVuZXI7XG5cdGdsb2JhbC5teVNpdGUucGxhY2VMYW5nU3dpdGNoTGlzdGVuZXIgPSBwbGFjZUxhbmdTd2l0Y2hMaXN0ZW5lcjtcblxufSh3aW5kb3cpKTtcbiIsIi8vIC0tLS0tLS0tLS0gUE9SVEZPTElPIEZJTFRFUiAtLS0tLS0tLS0tXG5cblx0ZnVuY3Rpb24gaW5pdENvbW1pc2lvbnNHYWxsZXJ5KGNhbGxiYWNrRnVuYyl7XG5cdFx0dHlwZW9mIGNhbGxiYWNrRnVuYz09PVwiZnVuY3Rpb25cIiA/IGNhbGxiYWNrRnVuYyA9IGNhbGxiYWNrRnVuYyA6IGNhbGxiYWNrRnVuYyA9IGZ1bmN0aW9uKCl7fTtcblxuXHRcdHZhciBicm9rZW5Db3VudCA9IDA7XG5cblx0XHQkKFwiLmdyaWQtaXRlbT4uaW1nLXJlc3VsdC13cmFwcGVyXCIpLmhpZGUoKTtcblx0XHQkKFwiLmdyaWQtaXRlbT4uaW1nLWxvYWRlci13cmFwcGVyXCIpLnNob3coKTtcblx0XHQkKFwiLmdyaWQ+LmdyaWQtaXRlbVwiKS5hZGRDbGFzcyhcImhvdmVyLW9mZlwiKTtcblxuXHRcdCQoJyNwb3J0Zm9saW9zJykuaW1hZ2VzTG9hZGVkKClcblx0XHQgIC5hbHdheXMoIGZ1bmN0aW9uKCBpbnN0YW5jZSApIHtcblx0XHQgICAgY29uc29sZS5sb2coXCJhbGwgaW1hZ2VzIG9mICdDb21taXNpb25zIG1lbnUnIGxvYWRlZFwiKTtcblxuXHRcdFx0aW5zdGFudGlhdGVJc290b3BlR2FsbGVyeShcIi5ncmlkXCIse1xuXHRcdCAgXHRcdGl0ZW1TZWxlY3RvcjogJy5ncmlkLWl0ZW0nLFxuXHRcdCAgXHRcdHN0YWdnZXI6IDMwXG5cdFx0XHR9KTtcblxuXHRcdCAgICBidWlsZEltZ0NhdGVnb3JpZXMoXCIjZmlsdGVyLXBvcnRmb2xpb1wiLFwiI3BvcnRmb2xpby1nYWxsZXJ5IC5ncmlkLWl0ZW1cIik7XG5cdFx0ICAgIHBsYWNlRmlsdGVyTGlzdGVuZXJzKFwiLmdyaWRcIik7XG5cblx0XHRcdCQoXCIuZ3JpZC1pdGVtPi5pbWctcmVzdWx0LXdyYXBwZXJcIikuZmFkZU91dCgxMDAwKTtcblx0XHQgICAgJChcIi5pbWctbG9hZGVyPi5pbWctbG9hZGVyLXRleHRcIikudGV4dChcImltYWdlcyBsb2FkZWRcIik7XG5cdFx0ICAgICQoXCIuaW1nLWxvYWRlci1iYXJcIikuY3NzKFwiYmFja2dyb3VuZC1jb2xvclwiLFwiZ3JlZW5cIik7XG5cdFx0ICAgICQoXCIuaW1nLWxvYWRlclwiKS5kZWxheSgzMDAwKS5zbGlkZVVwKDEwMDApO1xuXHRcdCAgICAkKFwiLmdyaWQ+LmdyaWQtaXRlbVwiKS5yZW1vdmVDbGFzcyhcImhvdmVyLW9mZlwiKTtcblxuXHRcdCAgICBjYWxsYmFja0Z1bmMoKTtcblxuXHRcdCAgfSlcblx0XHQgIC5kb25lKCBmdW5jdGlvbigpIHtcblx0XHQgICAgY29uc29sZS5sb2coXCJhbGwgaW1hZ2VzIG9mICdDb21taXNpb25zIG1lbnUnIHN1Y2Nlc3NmdWxseSBsb2FkZWRcIik7XG5cblx0XHQgIH0pXG5cdFx0ICAuZmFpbCggZnVuY3Rpb24oKSB7XG5cdFx0ICAgIGNvbnNvbGUubG9nKCBicm9rZW5Db3VudCArIFwiIG9mICdDb21taXNpb25zIG1lbnUnIGltYWdlcyBoYXZlIGJyb2tlbiBsaW5rcy4gQ2hlY2sgeW91ciBpbWFnZSBwYXRocy5cIik7XG5cdFx0ICAgICQoXCIuaW1nLWxvYWRlclwiKS5kZWxheSgzMDAwKS5zbGlkZVVwKDEwMDApO1xuXHRcdCAgfSlcblx0XHQucHJvZ3Jlc3MoIGZ1bmN0aW9uKCBpbnN0YW5jZSwgaW1hZ2UgKSB7XG5cblx0XHQgICAgaWYgKGltYWdlLmlzTG9hZGVkKSB7XG5cdFx0ICAgIFx0JChpbWFnZS5pbWcpLnNpYmxpbmdzKFwiLmltZy1sb2FkZXItd3JhcHBlclwiKS5oaWRlKCk7XG5cdFx0ICAgIFx0JChpbWFnZS5pbWcpLnNpYmxpbmdzKFwiLmltZy1yZXN1bHQtd3JhcHBlclwiKS5hbmltYXRlQ3NzKFwiYm91bmNlSW5cIikuc2hvdygpO1xuXHRcdFx0XHQkKFwiLmltZy1sb2FkZXItYmFyXCIpLndpZHRoKChpbnN0YW5jZS5wcm9ncmVzc2VkQ291bnQvaW5zdGFuY2UuaW1hZ2VzLmxlbmd0aCkqMTAwICsgXCIlXCIpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YnJva2VuQ291bnQrKztcblx0XHRcdFx0JChpbWFnZS5pbWcpLnBhcmVudCgpLnJlbW92ZSgpO1xuXHRcdFx0fVxuXG5cdFx0fSk7XG5cdH1cblxuXHRmdW5jdGlvbiBpbml0UHJpY2luZ0dhbGxlcnkoY2FsbGJhY2tGdW5jKXtcblx0XHR0eXBlb2YgY2FsbGJhY2tGdW5jPT09XCJmdW5jdGlvblwiID8gY2FsbGJhY2tGdW5jID0gY2FsbGJhY2tGdW5jIDogY2FsbGJhY2tGdW5jID0gZnVuY3Rpb24oKXt9O1xuXG5cdFx0dmFyIGJyb2tlbkNvdW50ID0gMDtcblx0XHQkKFwiLmdyaWQtcHJpY2luZz4uZ3JpZC1pdGVtLXByaWNpbmdcIikuYWRkQ2xhc3MoXCJob3Zlci1vZmZcIik7XG5cblx0XHQkKFwiI3ByaWNpbmdcIikuaW1hZ2VzTG9hZGVkKClcblx0XHQgXHQuYWx3YXlzKCBmdW5jdGlvbiggaW5zdGFuY2UgKSB7XG5cdFx0ICAgIFx0Y29uc29sZS5sb2coXCJhbGwgaW1hZ2VzIG9mICdQcmljaW5nIG1lbnUnIGxvYWRlZFwiKTtcblxuXHRcdCAgIFx0XHRpbnN0YW50aWF0ZUlzb3RvcGVHYWxsZXJ5KFwiLmdyaWQtcHJpY2luZ1wiLHtcblx0XHQgIFx0XHRcdGl0ZW1TZWxlY3RvcjogJy5ncmlkLWl0ZW0tcHJpY2luZycsXG5cdFx0ICBcdFx0XHRzdGFnZ2VyOiAzMFxuXHRcdFx0XHR9KTtcblxuXHRcdCAgICBcdGJ1aWxkSW1nQ2F0ZWdvcmllcyhcIiNmaWx0ZXItcHJpY2VsaXN0XCIsXCIjcHJpY2luZy1nYWxsZXJ5IC5ncmlkLWl0ZW0tcHJpY2luZ1wiKTtcblx0XHQgICAgXHRwbGFjZUZpbHRlckxpc3RlbmVycyhcIi5ncmlkLXByaWNpbmdcIik7XG5cdFx0ICAgIFx0JChcIi5ncmlkLXByaWNpbmc+LmdyaWQtaXRlbS1wcmljaW5nXCIpLnJlbW92ZUNsYXNzKFwiaG92ZXItb2ZmXCIpO1xuXG5cdFx0XHRcdFx0Y2FsbGJhY2tGdW5jKCk7XG5cblx0XHQgIFx0fSlcblx0XHQgIFx0LmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdCAgICBcdGNvbnNvbGUubG9nKFwiQWxsIGltYWdlcyBvZiAnUHJpY2luZyBtZW51JyBzdWNjZXNzZnVsbHkgbG9hZGVkXCIpO1xuXG5cdFx0ICBcdH0pXG5cdFx0ICBcdC5mYWlsKCBmdW5jdGlvbigpIHtcblx0XHQgICAgXHRjb25zb2xlLmxvZyggYnJva2VuQ291bnQgKyBcIiBvZiAnUHJpY2luZyBtZW51JyBpbWFnZXMgaGF2ZSBicm9rZW4gbGlua3MuIENoZWNrIHlvdXIgaW1hZ2UgcGF0aHMuXCIpO1xuXHRcdCAgXHR9KVxuXHRcdFx0LnByb2dyZXNzKCBmdW5jdGlvbiggaW5zdGFuY2UsIGltYWdlICkge1xuXG5cdFx0ICAgIFx0aWYgKCFpbWFnZS5pc0xvYWRlZCkge1xuXHRcdFx0XHRcdGJyb2tlbkNvdW50Kys7XG5cdFx0XHRcdFx0JChpbWFnZS5pbWcpLnBhcmVudCgpLnJlbW92ZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0fVxuXG5cblx0ZnVuY3Rpb24gaW5zdGFudGlhdGVJc290b3BlR2FsbGVyeShlbCxvcHRpb25zKXtcblx0XHQkKGVsKS5pc290b3BlKG9wdGlvbnMpO1xuXHR9XG5cblx0ZnVuY3Rpb24gYnVpbGRJbWdDYXRlZ29yaWVzKGxpc3RFbGVtZW50LGltZ0NvbnRhaW5lcnMpIHtcblxuXHRcdHZhciAkaW1nQ29udGFpbmVycyA9ICQoaW1nQ29udGFpbmVycyk7XG5cdFx0dmFyICRidXR0b25zID0gJChsaXN0RWxlbWVudCk7XG5cdFx0dmFyIHRhZ2dlZCA9IHt9O1xuXG5cdFx0JGJ1dHRvbnMuY2hpbGRyZW4oKS5yZW1vdmUoKTtcblxuXHRcdCRpbWdDb250YWluZXJzLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdHZhciBpbWdDb250YWluZXI9dGhpcztcblx0XHRcdHZhciB0YWdzID0gJCh0aGlzKS5kYXRhKCdwb3J0Zm9saW8tdGFncycpO1xuXG5cdFx0XHRpZiAodGFncykge1xuXHRcdFx0XHR0YWdzLnNwbGl0KFwiLFwiKS5mb3JFYWNoKGZ1bmN0aW9uKHRhZ05hbWUpe1xuXHRcdFx0XHRcdHRhZ05hbWUgPSB0YWdOYW1lLnRyaW0oKTtcblx0XHRcdFx0XHRpZiAodGFnZ2VkW3RhZ05hbWVdPT1udWxsKSB7XG5cdFx0XHRcdFx0XHR0YWdnZWRbdGFnTmFtZV09W107XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRhZ2dlZFt0YWdOYW1lXS5wdXNoKGltZ0NvbnRhaW5lcik7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH0pXG5cblx0XHQkYnV0dG9ucy5hZGRDbGFzcyhcImZpbHRlci13cmFwcGVyXCIpO1xuXHRcdCQoXCI8bGkvPlwiKS5hcHBlbmRUbygkYnV0dG9ucyk7XG5cblx0XHQkKFwiPGEvPlwiLCB7XG5cdFx0XHR0ZXh0OiBcIlbFoWVcIixcblx0XHRcdGNsYXNzOiBcImZpbHRlci1pdGVtIHNlbGVjdGVkXCIsXG5cdFx0XHRjbGljazogZnVuY3Rpb24oKXtcblx0XHRcdFx0JCh0aGlzKS5hZGRDbGFzcyhcInNlbGVjdGVkXCIpLnBhcmVudCgpLnNpYmxpbmdzKCkuY2hpbGRyZW4oKS5yZW1vdmVDbGFzcyhcInNlbGVjdGVkXCIpO1xuXHRcdFx0fVxuXHRcdH0pLmFwcGVuZFRvKCRidXR0b25zLmNoaWxkcmVuKCkuZXEoMCkpLmF0dHIoJ2RhdGEtbGFuZycsJ1bFoWUnKTtcblxuXHRcdCQoXCI8bGk+PGEgY2xhc3M9J2ZpbHRlci1pdGVtIGZpbHRlci1wb3J0Zm9saW8tZGl2aWRlcic+Jm5ic3A7PC9hPjwvbGk+XCIpLmFwcGVuZFRvKCRidXR0b25zKTtcblxuXHRcdCQuZWFjaCh0YWdnZWQsIGZ1bmN0aW9uKHRhZ05hbWUpIHtcblx0XHRcdCQoXCI8bGkvPlwiKS5hcHBlbmRUbygkYnV0dG9ucyk7XG5cblx0XHRcdCQoXCI8YS8+XCIsIHtcblx0XHRcdFx0dGV4dDogdGFnTmFtZSxcblx0XHRcdFx0Y2xhc3M6IFwiZmlsdGVyLWl0ZW1cIixcblx0XHRcdFx0Y2xpY2s6IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0JCh0aGlzKS5hZGRDbGFzcyhcInNlbGVjdGVkXCIpLnBhcmVudCgpLnNpYmxpbmdzKCkuY2hpbGRyZW4oKS5yZW1vdmVDbGFzcyhcInNlbGVjdGVkXCIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KS5hcHBlbmRUbygkYnV0dG9ucy5jaGlsZHJlbigpLmxhc3QoKSkuYXR0cignZGF0YS1sYW5nJyx0YWdOYW1lKTtcblx0XHR9KVxuXG5cdH07XG5cblx0ZnVuY3Rpb24gcGxhY2VGaWx0ZXJMaXN0ZW5lcnMoZ3JpZEVsKSB7ICAgLy8gXCIuZ3JpZFwiXG5cdCAgICAkKCcuZmlsdGVyLXdyYXBwZXInKS5vbiggJ2NsaWNrJywgJy5maWx0ZXItaXRlbScsIGZ1bmN0aW9uKCkge1xuXHQgICAgXHR2YXIgZmlsdGVyVmFsdWUgPSAkKHRoaXMpLmRhdGEoJ2xhbmcnKTtcblx0ICAgIFx0IC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS1cIik7XG5cdCAgICBcdCAvLyBjb25zb2xlLmxvZyhmaWx0ZXJWYWx1ZSk7XG5cblx0ICAgIFx0aWYgKGZpbHRlclZhbHVlID09PSAkKCQoXCIuZmlsdGVyLWl0ZW1cIilbMF0pLmRhdGEoJ2xhbmcnKSkge1xuXHQgICAgXHRcdCQoZ3JpZEVsKS5pc290b3BlKHtcblx0XHRcdFx0ICBcdGZpbHRlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdCAgXHRcdHJldHVybiB0cnVlO1xuXHRcdFx0ICBcdCAgXHR9XG5cdFx0XHRcdFx0fSk7XG5cdCAgICBcdH0gZWxzZSB7XG5cdFx0XHRcdFx0JChncmlkRWwpLmlzb3RvcGUoe1xuXHRcdFx0XHRcdCAgXHRmaWx0ZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdCAgXHRcdHRhZ1RleHQ9ICQodGhpcykuZGF0YSgncG9ydGZvbGlvVGFncycpO1xuXHRcdFx0XHRcdCAgXHRcdGZvdW5kID0gdGFnVGV4dC5zZWFyY2goZmlsdGVyVmFsdWUpO1xuXHRcdFx0XHRcdFx0ICBcdGlmIChmb3VuZD4gLTEpIHtcblx0XHRcdFx0XHRcdCAgXHRcdHJldHVybiB0cnVlXG5cdFx0XHRcdFx0XHQgIFx0fSAgIGVsc2Uge1xuXHRcdFx0XHRcdFx0ICBcdFx0cmV0dXJuIGZhbHNlXG5cdFx0XHRcdFx0XHQgIFx0fVxuXHRcdFx0XHQgIFx0ICBcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHQgICAgfSk7XG5cblx0XHQkKGdyaWRFbCArICcgLmdyaWQtaXRlbScpLm9uKCAnY2xpY2snLCBmdW5jdGlvbihlKSB7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRpZiAoJCh0aGlzKS5oYXNDbGFzcygnZ3JpZC1pdGVtLXNlbGVjdGVkJykpIHtcblx0XHRcdFx0JCh0aGlzKS5yZW1vdmVDbGFzcygnZ3JpZC1pdGVtLXNlbGVjdGVkJyk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHQkKGdyaWRFbCArICcgLmdyaWQtaXRlbScpLnJlbW92ZUNsYXNzKCdncmlkLWl0ZW0tc2VsZWN0ZWQnKTtcblx0XHRcdFx0JCh0aGlzKS5hZGRDbGFzcygnZ3JpZC1pdGVtLXNlbGVjdGVkJyk7XG5cdFx0XHR9XG5cdFx0XHQkKGdyaWRFbCkuaXNvdG9wZSgnbGF5b3V0Jyk7XG5cdFx0XHQvLyBjb25zb2xlLmxvZygnZ3JpZCBpdGVtIGNsaWNrZWQnKTtcblx0XHRcdC8vIGNvbnNvbGUubG9nKCQodGhpcykpO1xuXHRcdH0pO1xuXG5cdH1cbiJdfQ==
