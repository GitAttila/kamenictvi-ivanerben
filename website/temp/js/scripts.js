var ContactFormModule=function(){return{initContactFormListener:function(){$("#contact-form .btn-site").on("click",function(){$("#contact-form").submit()}),$("#contact-form").submit(function(e){if(e.preventDefault(),void 0===$("#contact-form .btn-site").attr("disabled")){$("#contact-form .btn-site").attr("disabled",!0),$("#contact-form .btn-site").addClass("spinning"),$("#contact-form .btn-site").animateCss("pulse");var t=$("#contact-form").find("input, textarea, select"),s={};t.each(function(){this.name&&("checkbox"==this.type||"radio"==this.type?this.checked&&(s[this.name]=this.value):s[this.name]=this.value)}),$.ajax({url:"assets/php/handleajaxform.php",method:"POST",data:s,success:function(e){if($("div[data-error-id]").text(""),$("#contact-form input, #contact-form textarea").removeClass("form-error"),$("#send-result").text(""),Object.keys(e.errors).length>0)for(var t in e.errors)console.log("error in "+t+": "+e.errors[t]),$('div[data-error-id="'+t+'"]').text(e.errors[t]).hide().slideDown(),$('*[name="'+t+'"]').addClass("form-error"),$('*[name="'+t+'"]').animateCss("shake");else console.log("All validation passed succesfully!"),$("#send-result").text("Thank you. Your message has been sent."),$("#send-result").removeClass("alert-danger").addClass("alert-success"),$("#send-result").show().animateCss("bounceIn",function(){$("input").val(""),$("textarea").val(""),$("#send-result").delay(5e3).slideUp()})},error:function(){$("#send-result").removeClass("alert-success"),$("#send-result").addClass("alert-danger"),$("#send-result").text("Sorry... Your message could not have been delivered."),$("#send-result").slideDown()},complete:function(){$("#contact-form .btn-site").removeAttr("disabled"),$("#contact-form .btn-site").removeClass("spinning"),$("#contact-form .btn-site").animateCss("pulse")}})}})}}}();
var MapModule=function(){var e,n={lat:50.048822,lng:15.200242};return{initContactMap:function(){var a=[{featureType:"all",elementType:"all",stylers:[{saturation:-100},{gamma:.5}]}],t=new google.maps.Map(document.getElementById("contact-map"),{center:n,scrollwheel:!1,streetViewControl:!0,streetViewControl:{position:google.maps.ControlPosition.LEFT_BOTTOM},mapTypeControl:!0,mapTypeControlOptions:{position:google.maps.ControlPosition.BOTTOM_LEFT},zoomControl:!0,zoomControlOptions:{position:google.maps.ControlPosition.LEFT_CENTER},styles:a,zoom:8});e=t;new google.maps.Marker({map:t,position:n,title:"Kamenictv√≠ Erben",icon:{url:"assets/images/IE_logo_rounded_pointer.png",scaledSize:new google.maps.Size(150,150)}});e.panBy(0,-$("nav.navbar").height())},placeContactListeners:function(){$(".btn-map").on("click",function(a){a.preventDefault();var t=$(this);if(window.addEventListener("orientationchange",function(){t.children().hasClass("fa-expand")&&(window.matchMedia("(orientation: landscape)").matches&&window.innerWidth<767?$("#contact-map").animate({height:"75vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())}):$("#contact-map").animate({height:"50vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())}))},!1),t.children().hasClass("fa-expand"))return t.children().removeClass("fa-expand").addClass("fa-compress"),void $("#contact-map").animate({height:"100vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())});t.children().hasClass("fa-compress")&&(t.children().removeClass("fa-compress").addClass("fa-expand"),window.matchMedia("(orientation: landscape)").matches&&window.innerWidth<767?$("#contact-map").animate({height:"75vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())}):$("#contact-map").animate({height:"50vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())}))})}}}();
$(function(e){"object"!=typeof e.mySite&&(e.mySite={});var n=[{carousel:"#main-carousel",interval:7e5,pause:"none"},{carousel:"#about-carousel",interval:5e5,pause:"none"},{carousel:"#carouselTombstones",interval:3e5,pause:"none"},{carousel:"#carouselGarden",interval:3e5,pause:"none"},{carousel:"#carouselRestorations",interval:3e5,pause:"none"},{carousel:"#CarouselMonuments",interval:3e5,pause:"none"}];$(".loader-wrapper").hide(),$.fn.extend({animateCss:function(e,n){return this.addClass("animated "+e).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){$(this).removeClass("animated "+e),$.isFunction(n)&&n()}),this}}),initCarousels=function(e){for(var n=0;n<e.length-1;n++)$(e[n].carousel).carousel({interval:e[n].interval});console.log("carousels initialized")},initCarousels(n),e.mySite.carouselsSetup=n,e.mySite.initCarousels=initCarousels}(window));
!function(a,t){var n=["cz","en"],e=function(a){return new e.init(a)};e.prototype={getKeyVal:function(a){return self=this,function(){a=a.trim();for(var t,n=0;n<=e.data.length-1;n++){if(e.data[n].datatag===a)return t=e.data[n][self.activeLang];t=""}return t}()},switchLang:function(a){self=this;for(var n=t("[data-lang]").length,e=0;e<=n-1;e++){var i=t(t("[data-lang]")[e]).data("lang");value=LNG$(a).getKeyVal(i),void 0===value?console.log("Language tag '"+i+"' is not defined in language database for: "+a):""!==value.trim()&&(value.search("<ph>")>-1?(value=value.substr(4,value.length),t(t("[data-lang]")[e]).attr("placeholder",value)):t(t("[data-lang]")[e]).text(LNG$(a).getKeyVal(i)).animateCss("pulse"),t(t("[data-lang]")[e]).css("visibility","visible"))}},getSelectedLang:function(){return t(".lang-switcher>span").text().toLowerCase().trim()}},e.init=function(a){this.activeLang=a||n[0]},e.init.prototype=e.prototype,a.Lang=a.LNG$=e,function(a,n){t.getJSON(a,function(){}).done(function(a){console.log("lang data loaded..."),n(a)}).fail(function(a,t,n){console.log("--- error ---"),console.log(a)}).always(function(){})}("./assets/data/lang.json",function(a){e.data=a;var n=t(".lang-switcher>span").text().trim();LNG$(n).switchLang(n)})}(window,jQuery);
$(function(n){function e(){console.log("navMenu initialized");var e={};$cachedItems=$("#mainNavbar [data-menuitem]"),$($cachedItems).each(function(n,t){e[$(t).data("menuitem")]=""}),n.mySite.cachedPage=e,$("#mainNavbar").on("show.bs.collapse",function(){$(".navbar .navbar-collapse").removeClass("order-2").addClass("order-5"),$(".hamburger__menu-icon").addClass("hamburger__menu-icon--close-x")}),$("#mainNavbar").on("hidden.bs.collapse",function(){$(".navbar .navbar-collapse").removeClass("order-5").addClass("order-2")}),$("#mainNavbar").on("hide.bs.collapse",function(){$(".hamburger__menu-icon").removeClass("hamburger__menu-icon--close-x")}),$(".nav-item").on("click",function(n){if(n.preventDefault(),!d){var e=$(this).children(".nav-link").attr("href").trim().toLowerCase();t($(this).children(".nav-link").data("menuitem").trim().toLowerCase(),this,e)}})}function t(n,e,t,i){d=!0,"string"!=typeof menuItemName&&(menuItemName=""),lang=LNG$().getSelectedLang(),e=e||"",t=t||"","function"!=typeof i&&(i=function(){}),$(e).parent().children(".nav-item").removeClass("active"),$(e).addClass("active"),$("#mainNavbar").collapse("hide"),$("#ajax-container").fadeOut(500,function(){$("#ajax-content").hide(),$(".loader-wrapper").fadeIn(500),$("body,html").stop().animate({scrollTop:0},"50"),$(this).remove(),""===mySite.cachedPage[n]?$("#ajax-content").load(t+" #ajax-container",function(e,t){"success"===t?(console.log("Loaded '"+n+"' from SERVER..."),a(function(){LNG$(lang).switchLang(lang),mySite.cachedPage[n]=$(e).find("#ajax-container"),mapInitFlag="contact"===n,m[n](i,mapInitFlag)})):"error"===t&&($(".loader-wrapper").hide(),console.log("Error loading from server..."))}):(console.log("Loaded '"+n+"' from CACHE..."),$(mySite.cachedPage[n]).appendTo("#ajax-content"),a(function(){LNG$(lang).switchLang(lang),m[n](i)}))})}function a(n){"function"!=typeof n&&(n=function(){}),$("#ajax-container").show(),$(".loader-wrapper").hide(),$("#ajax-content").fadeIn(500,function(){n()})}function o(n,e,t){"function"!=typeof t&&(t=function(){}),$(e).append($("<script />",{src:n,async:!0,defer:!0})),t()}function c(){clearInterval(mySite.btnInterval),mySite.btnInterval=setInterval(function(){$(".btn-down").animateCss("bounce")},3e3);var n=0;$(window).on("scroll",function(){var e=$(window).height(),t=$(window).scrollTop();n=e/5,t<0&&(t=0),(e-n)/t>1?$(".btn-move-up").is(":visible")&&$(".btn-move-up").animateCss("bounceOut",function(){$(".btn-move-up").hide(),$(".btn-down").show().animateCss("bounceIn")}):$(".btn-move-up").is(":visible")||$(".btn-down").animateCss("bounceOut",function(){$(".btn-down").hide(),$(".btn-move-up").show(),$(".btn-move-up").animateCss("bounceIn")})}),$(".btn-move-up").on("click",function(){$("body,html").stop().animate({scrollTop:0},"700","swing")}),$(".btn-down").on("click",function(n){n.preventDefault();var e=n.currentTarget.hash,t=$(e).offset().top;$("body,html").stop().animate({scrollTop:t},"700","swing")})}function r(){function n(n,e){"object"!=typeof n&&(n=n||[]),"string"!=typeof e&&(e=e||"");var t=!1;return-1===n.indexOf(e)?console.log("error: language: '"+e+"' within 'index.html' file is not compatible with languages defined."):t=!0,t}var e=[],t={cz:!0,en:!0,de:!1};u=LNG$().getSelectedLang(),$.each(t,function(n,t){t&&e.push(n)}),$(".lang-switcher>span").on("click",function(){var t=e.indexOf(u)+1;n(e,u)&&(t=t===e.length?0:t,u=e[t],$(".lang-switcher>span").text(u),LNG$(u).switchLang(u),$(this).animateCss("bounceIn"))})}function l(){console.log("links to gallery initialized..."),$(".btn-site").on("click",function(n){n.preventDefault;var e=(LNG$().getSelectedLang(),$(this).data("link").toLowerCase().trim()),a=$("[data-menuitem='realisations']"),i=window.location.href;i.search("index.html")>=0?i=i.replace("index.html","realisations.html"):i+="realisations.html",t("realisations",a,i,function(){$(".filter-item").each(function(n){if(void 0!==$(this).data("lang")&&$(this).data("lang").toLowerCase().trim()===e)return void $(this).trigger("click")})})})}function s(n,e){if(console.log("parallax '"+n+"' initialized"),n=n||"",e=e||"",!f){var t=new ScrollMagic.Controller({globalSceneOptions:{triggerHook:"onEnter",duration:"100%"}});new ScrollMagic.Scene({triggerElement:n}).setTween(e,{y:"50%",ease:Linear.easeNone}).addTo(t)}}var u="",d=!1;"object"!=typeof n.mySite&&(n.mySite={});var m={main:function(n){"function"!=typeof n&&(n=function(){}),mySite.initCarousels(mySite.carouselsSetup),c(),l(),f||s("#parallax1","#parallax1 > div"),n(),d=!1},about:function(n){"function"!=typeof n&&(n=function(){}),mySite.initCarousels(mySite.carouselsSetup),c(),f||s("#parallax2","#parallax2 > div"),n(),d=!1},realisations:function(n){"function"!=typeof n&&(n=function(){}),mySite.initCommisionsGallery(function(){var e=LNG$().getSelectedLang();LNG$(e).switchLang(e),c(),n(),d=!1})},pricing:function(n){"function"!=typeof n&&(n=function(){}),mySite.initPricingGallery(function(){var e=LNG$().getSelectedLang();LNG$(e).switchLang(e),c(),n(),d=!1})},contact:function(n,e){"function"!=typeof n&&(n=function(){}),e=e||!1,e?(ContactFormModule.initContactFormListener(),o("https://maps.googleapis.com/maps/api/js?key=AIzaSyA0qVKpndfcoIgP5nwuJxmH5q0v5TSvEc4&callback=MapModule.initContactMap","body",function(){MapModule.placeContactListeners(),n(),d=!1})):(MapModule.initContactMap(),MapModule.placeContactListeners(),ContactFormModule.initContactFormListener(),n(),d=!1)}},f=function(){var n=["android","webos","iphone","ipad","blackberry"];for(i in n)if(navigator.userAgent.toLowerCase().search(n[i])>-1&&void 0!==window.orientation)return!0;return!1}();n.mySite.isMobileFlag=f,!0===f&&$("body").addClass("isMobile"),$(window).on("load",function(){l(),e(),c(),r(),s("#parallax1","#parallax1 > div")}),n.mySite.navMenuInit=e,n.mySite.linkToGallery=l,n.mySite.navItemClickCallback=t,n.mySite.placeJumpButtonListeners=c,n.mySite.placeLangSwitchListener=r,n.mySite.initParallax=s}(window));
$(function(e){function i(e){var i=LNG$().getSelectedLang();console.log("initCommisionsGallery called"),e="function"==typeof e?e:function(){};var o=0;$(".grid-item>.img-result-wrapper").hide(),$(".grid-item>.img-loader-wrapper").show(),$(".grid>.grid-item").addClass("hover-off"),$("#portfolios").imagesLoaded().always(function(i){console.log("all images of 'Commisions menu' loaded"),t(".grid",{itemSelector:".grid-item",stagger:30}),r("#filter-portfolio","#portfolio-gallery .grid-item"),l(".grid"),$(".grid-item>.img-result-wrapper").fadeOut(1e3),$(".img-loader>.img-loader-text").text("images loaded"),$(".img-loader-bar").css("background-color","green"),$(".img-loader").delay(3e3).slideUp(1e3),$(".grid>.grid-item").removeClass("hover-off"),e()}).done(function(){console.log("all images of 'Commisions menu' successfully loaded"),LNG$(i).switchLang(i)}).fail(function(){console.log(o+" of 'Commisions menu' images have broken links. Check your image paths."),$(".img-loader").delay(3e3).slideUp(1e3)}).progress(function(e,i){i.isLoaded?($(i.img).siblings(".img-loader-wrapper").hide(),$(i.img).siblings(".img-result-wrapper").animateCss("bounceIn").show(),$(".img-loader-bar").width(e.progressedCount/e.images.length*100+"%")):(o++,$(i.img).parent().remove())})}function o(e){e="function"==typeof e?e:function(){};var i=0;$(".grid-pricing>.grid-item-pricing").addClass("hover-off"),$("#pricing").imagesLoaded().always(function(i){console.log("all images of 'Pricing menu' loaded"),t(".grid-pricing",{itemSelector:".grid-item-pricing",stagger:30}),r("#filter-pricelist","#pricing-gallery .grid-item-pricing"),l(".grid-pricing"),$(".grid-pricing>.grid-item-pricing").removeClass("hover-off"),e()}).done(function(){console.log("All images of 'Pricing menu' successfully loaded")}).fail(function(){console.log(i+" of 'Pricing menu' images have broken links. Check your image paths.")}).progress(function(e,o){o.isLoaded||(i++,$(o.img).parent().remove())})}function t(e,i){$(e).isotope(i),$(e).isotope("on","layoutComplete",function(){".grid"===e?$(e+" :visible img").animateCss("pulse"):".grid-pricing"===e&&$(e+" :visible").animateCss("pulse")})}function r(e,i){var o=$(i),t=$(e),r={};t.children().remove(),o.each(function(){var e=this,i=$(this).data("portfolio-tags");i&&i.split(",").forEach(function(i){i=i.trim(),null==r[i]&&(r[i]=[]),r[i].push(e)})}),t.addClass("filter-wrapper"),$("<li/>").appendTo(t),$("<a/>",{text:"V≈°e",class:"filter-item selected",click:function(){$(this).addClass("selected").parent().siblings().children().removeClass("selected")}}).appendTo(t.children().eq(0)).attr("data-lang","V≈°e"),$("<li><a class='filter-item filter-portfolio-divider'>&nbsp;</a></li>").appendTo(t),$.each(r,function(e){$("<li/>").appendTo(t),$("<a/>",{text:e,class:"filter-item",click:function(){$(this).addClass("selected").parent().siblings().children().removeClass("selected")}}).appendTo(t.children().last()).attr("data-lang",e)})}function l(e){$(".filter-wrapper").on("click",".filter-item",function(){var i=$(this).data("lang");i===$($(".filter-item")[0]).data("lang")?$(e).isotope({filter:function(){return!0}}):$(e).isotope({filter:function(){return tagText=$(this).data("portfolioTags"),found=tagText.search(i),found>-1}})}),$(e+" .grid-item").on("click",function(i){i.preventDefault(),$(this).hasClass("grid-item-selected")?$(this).removeClass("grid-item-selected"):($(e+" .grid-item").removeClass("grid-item-selected"),$(this).addClass("grid-item-selected")),$(e).isotope("layout")})}e.mySite.initCommisionsGallery=i,e.mySite.initPricingGallery=o}(window));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
