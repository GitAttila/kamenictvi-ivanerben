var ContactFormModule=function(){return{initContactFormListener:function(){$("#contact-form .btn-site").on("click",function(){$("#contact-form").submit()}),$("#contact-form").submit(function(e){e.preventDefault(),console.log("Form submitted listener called");var t=$("#contact-form").find("input, textarea, select"),s={};t.each(function(){this.name&&("checkbox"==this.type||"radio"==this.type?this.checked&&(s[this.name]=this.value):s[this.name]=this.value)}),console.log("formValues : "+JSON.stringify(s)),$.ajax({url:"assets/php/handleajaxform.php",method:"POST",data:s,success:function(e){if(console.log("AJAX post result result : "+JSON.stringify(e)),$("div[data-error-id]").text(""),$("#contact-form input, #contact-form textarea").removeClass("form-error"),$("#send-result").text(""),Object.keys(e.errors).length>0)for(var t in e.errors)console.log("error in "+t+": "+e.errors[t]),$('div[data-error-id="'+t+'"]').text(e.errors[t]).hide().slideDown(),$('*[name="'+t+'"]').addClass("form-error"),$('*[name="'+t+'"]').animateCss("shake");else console.log("All validation passed succesfully!"),$("#send-result").text("Thank you. Your message has been sent."),$("#send-result").removeClass("alert-danger").addClass("alert-success"),$("#send-result").show().animateCss("bounceIn",function(){$("input").val(""),$("textarea").val(""),$("#send-result").delay(5e3).slideUp()})},error:function(){$("#send-result").removeClass("alert-success"),$("#send-result").addClass("alert-danger"),$("#send-result").text("Sorry... Your message could not have been delivered."),$("#send-result").slideDown()}})})}}}();
var MapModule=function(){var e,n={lat:50.048822,lng:15.200242};return{initContactMap:function(){var a=[{featureType:"all",elementType:"all",stylers:[{saturation:-100},{gamma:.5}]}],t=new google.maps.Map(document.getElementById("contact-map"),{center:n,scrollwheel:!1,streetViewControl:!0,streetViewControl:{position:google.maps.ControlPosition.LEFT_BOTTOM},mapTypeControl:!0,mapTypeControlOptions:{position:google.maps.ControlPosition.BOTTOM_LEFT},zoomControl:!0,zoomControlOptions:{position:google.maps.ControlPosition.LEFT_CENTER},styles:a,zoom:8});e=t;new google.maps.Marker({map:t,position:n,title:"Kamenictv√≠ Erben",icon:{url:"assets/images/IE_logo_rounded_pointer.png",scaledSize:new google.maps.Size(150,150)}});e.panBy(0,-$("nav.navbar").height())},placeContactListeners:function(){$(".btn-map").on("click",function(a){a.preventDefault();var t=$(this);if(window.addEventListener("orientationchange",function(){t.children().hasClass("fa-expand")&&(window.matchMedia("(orientation: landscape)").matches&&window.innerWidth<767?$("#contact-map").animate({height:"75vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())}):$("#contact-map").animate({height:"50vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())}))},!1),t.children().hasClass("fa-expand"))return t.children().removeClass("fa-expand").addClass("fa-compress"),void $("#contact-map").animate({height:"100vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())});t.children().hasClass("fa-compress")&&(t.children().removeClass("fa-compress").addClass("fa-expand"),window.matchMedia("(orientation: landscape)").matches&&window.innerWidth<767?$("#contact-map").animate({height:"75vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())}):$("#contact-map").animate({height:"50vh"},500,function(){google.maps.event.trigger(e,"resize"),e.setCenter(n),e.panBy(0,-$("nav.navbar").height())}))})}}}();
$(function(n){$(".loader-wrapper").hide();setInterval(function(){$(".btn-down").animateCss("bounce")},3e3);$.fn.extend({animateCss:function(n,e){return this.addClass("animated "+n).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){$(this).removeClass("animated "+n),$.isFunction(e)&&e()}),this}}),initCarousels=function(){console.log("carousels initialized");for(var n=[{carousel:"#main-carousel",interval:7e3,pause:"none"},{carousel:"#about-carousel",interval:5e3,pause:"none"},{carousel:"#carouselTombstones",interval:3e3,pause:"none"},{carousel:"#carouselGarden",interval:3e3,pause:"none"},{carousel:"#carouselRestorations",interval:3e3,pause:"none"},{carousel:"#CarouselMonuments",interval:3e3,pause:"none"}],e=0;e<n.length-1;e++)$(n[e].carousel).carousel({interval:n[e].interval})},n.initCarousels=initCarousels}(window));
!function(a,t){var n=["cz","en"],e=function(a){return new e.init(a)};e.prototype={getKeyVal:function(a){return self=this,function(){a=a.trim();for(var t,n=0;n<=e.data.length-1;n++){if(e.data[n].datatag===a)return t=e.data[n][self.activeLang];t=""}return t}()},switchLang:function(a){self=this;for(var n=t("[data-lang]").length,e=0;e<=n-1;e++){var i=t(t("[data-lang]")[e]).data("lang");value=LNG$(a).getKeyVal(i),""!==value.trim()&&(value.search("<ph>")>-1?(value=value.substr(4,value.length),t(t("[data-lang]")[e]).attr("placeholder",value)):t(t("[data-lang]")[e]).text(LNG$(a).getKeyVal(i)).animateCss("pulse"),t(t("[data-lang]")[e]).css("visibility","visible"))}}},e.init=function(a){this.activeLang=a||n[0]},e.init.prototype=e.prototype,a.Lang=a.LNG$=e,function(a,n){t.getJSON(a,function(){}).done(function(a){console.log("lang data loaded..."),n(a)}).fail(function(a,t,n){console.log("--- error ---"),console.log(a)}).always(function(){})}("./assets/data/lang.json",function(a){e.data=a;var n=t(".lang-switcher>span").text().trim();LNG$(n).switchLang(n)})}(window,jQuery);
$(function(n){function a(){function a(n,a,t){"function"!=typeof t&&(t=function(){}),$(a).append($("<script />",{src:n,async:!0,defer:!0})),t()}function i(n){"function"!=typeof n&&(n=function(){}),$("#ajax-container").show(),$("#ajax-content").hide(),$(".loader-wrapper").hide(),$("#ajax-content").show(),$("#ajax-content").fadeIn(500,function(){n()})}var l={},u="";$cachedItems=$("#mainNavbar [data-menuitem]"),$($cachedItems).each(function(n,a){l[$(a).data("menuitem")]=""}),n.mySite.cachedPage=l;var d={main:function(){initCarousels(),o(),s||c("#parallax1","#parallax1 > div")},about:function(){initCarousels(),s||c("#parallax2","#parallax2 > div")},realisations:function(){initCommisionsGallery(function(){LNG$(u).switchLang(u)})},pricing:function(){initPricingGallery(function(){LNG$(u).switchLang(u)})},contact:function(){a("https://maps.googleapis.com/maps/api/js?key=AIzaSyA0qVKpndfcoIgP5nwuJxmH5q0v5TSvEc4&callback=MapModule.initContactMap","#ajax-container",function(){$(function(){$(window).load(function(){MapModule.initContactMap(),MapModule.placeContactListeners(),ContactFormModule.initContactFormListener()})})})}};t(),e(!0),$("#mainNavbar").on("show.bs.collapse",function(){$(".hamburger__menu-icon").addClass("hamburger__menu-icon--close-x")}),$("#mainNavbar").on("hide.bs.collapse",function(){$(".hamburger__menu-icon").removeClass("hamburger__menu-icon--close-x")}),$(".nav-link").on("click",function(n){n.preventDefault();var a=this.href.trim().toLowerCase(),t=$(this).data("menuitem").trim().toLowerCase();u=$(".lang-switcher>span").text().trim(),$(this).siblings(".nav-link").removeClass("active"),$(this).addClass("active"),void 0!==r&&null!==r&&(r=r.destroy(!0)),$("#mainNavbar").collapse("hide"),$(".loader-wrapper").show(),$("#ajax-container").fadeOut(500,function(){$("body,html").stop().animate({scrollTop:0},"50"),$(this).remove(),""===mySite.cachedPage[t]?$("#ajax-content").load(a+" #ajax-container",function(n,a){"success"===a?(console.log("Loaded '"+t+"' from SERVER..."),i(function(){LNG$(u).switchLang(u),l[t]=$(n).find("#ajax-container"),d[t]()})):"error"===a&&($(".loader-wrapper").hide(),console.log("Error loading from server..."))}):(console.log("Loaded '"+t+"' from CACHE..."),$(mySite.cachedPage[t]).appendTo("#ajax-content"),i(function(){LNG$(u).switchLang(u),d[t]()}))})})}function t(){var n=0;$(window).on("scroll",function(){var a=$(window).height(),t=$(window).scrollTop();n=a/5,t<0&&(t=0),(a-n)/t>1?$(".btn-move-up").is(":visible")&&$(".btn-move-up").animateCss("bounceOut",function(){$(".btn-move-up").hide(),$(".btn-down").show().animateCss("bounceIn")}):$(".btn-move-up").is(":visible")||$(".btn-down").animateCss("bounceOut",function(){$(".btn-down").hide(),$(".btn-move-up").show(),$(".btn-move-up").animateCss("bounceIn")})}),$(".btn-move-up").on("click",function(){$("body,html").stop().animate({scrollTop:0},"700","swing")}),$(".btn-down").on("click",function(n){n.preventDefault();var a=n.currentTarget.hash,t=$(a).offset().top;$("body,html").stop().animate({scrollTop:t},"700","swing")})}function e(n){function a(n,a){"object"!=typeof n&&(n=n||[]),"string"!=typeof a&&(a=a||"");var t=!1;return-1===n.indexOf(i)?console.log("error: language: '"+a+"' within 'index.html' file is not compatible with languages defined."):t=!0,t}var n=n||!1,t=[],e={cz:!1,fr:!1,en:!0,de:!0,es:!1};$.each(e,function(n,a){a&&t.push(n)});var i=$(".lang-switcher>span").text().trim();n&&LNG$(i).switchLang(i),$(".lang-switcher>span").on("click",function(){var n=t.indexOf(i)+1;a(t,i)&&(n=n===t.length?0:n,i=t[n],$(".lang-switcher>span").text(i),LNG$(i).switchLang(i),$(this).animateCss("bounceIn"))})}function o(){$(".btn-site").on("click",function(n){n.preventDefault;var a=$(this).data("link").trim(),i=window.location.href;i.search("index.html")>=0?i=i.replace("index.html","realisations.html"):i+="realisations.html",$("#ajax-container").animateCss("fadeOutDown",function(){$("#ajax-content").hide(),$("#ajax-content").load(i+" #ajax-container",function(){$(".navbar-nav>.nav-link").removeClass("active"),$(".navbar-nav>.nav-link[href='realisations.html']").addClass("active"),$("#ajax-content").show(),$("#ajax-content").animateCss("fadeInUp"),placeContactListeners(),t(),e(),initCommisionsGallery(function(){$(".filter-item").each(function(n){if($(this).text().toLowerCase().trim()===a)return void $(this).trigger("click")})})})})})}function c(n,a){if(n=n||"",a=a||"",!s){var t=new ScrollMagic.Controller({globalSceneOptions:{triggerHook:"onEnter",duration:"100%"}});new ScrollMagic.Scene({triggerElement:n}).setTween(a,{y:"50%",ease:Linear.easeNone}).addTo(t)}}var r;n.mySite={};var s=function(){var n=["android","webos","iphone","ipad","blackberry"];for(i in n)if(navigator.userAgent.toLowerCase().search(n[i])>-1&&void 0!==window.orientation)return!0;return!1}();n.mySite.isMobileFlag=s,!0===s&&$("body").addClass("isMobile"),$(window).load(function(){o(),a(),t(),e(),c("#parallax1","#parallax1 > div")}),n.mySite.navMenuInit=a,n.mySite.placeButtonMoveUpListener=t,n.mySite.placeLangSwitchListener=e,n.mySite.initParallax=c}(window));
function initCommisionsGallery(e){e="function"==typeof e?e:function(){};var i=0;$(".grid-item>.img-result-wrapper").hide(),$(".grid-item>.img-loader-wrapper").show(),$(".grid>.grid-item").addClass("hover-off"),$("#portfolios").imagesLoaded().always(function(i){console.log("all images of 'Commisions menu' loaded"),instantiateIsotopeGallery(".grid",{itemSelector:".grid-item",stagger:30}),buildImgCategories("#filter-portfolio","#portfolio-gallery .grid-item"),placeFilterListeners(".grid"),$(".grid-item>.img-result-wrapper").fadeOut(1e3),$(".img-loader>.img-loader-text").text("images loaded"),$(".img-loader-bar").css("background-color","green"),$(".img-loader").delay(3e3).slideUp(1e3),$(".grid>.grid-item").removeClass("hover-off"),e()}).done(function(){console.log("all images of 'Commisions menu' successfully loaded")}).fail(function(){console.log(i+" of 'Commisions menu' images have broken links. Check your image paths."),$(".img-loader").delay(3e3).slideUp(1e3)}).progress(function(e,t){t.isLoaded?($(t.img).siblings(".img-loader-wrapper").hide(),$(t.img).siblings(".img-result-wrapper").animateCss("bounceIn").show(),$(".img-loader-bar").width(e.progressedCount/e.images.length*100+"%")):(i++,$(t.img).parent().remove())})}function initPricingGallery(e){e="function"==typeof e?e:function(){};var i=0;$(".grid-pricing>.grid-item-pricing").addClass("hover-off"),$("#pricing").imagesLoaded().always(function(i){console.log("all images of 'Pricing menu' loaded"),instantiateIsotopeGallery(".grid-pricing",{itemSelector:".grid-item-pricing",stagger:30}),buildImgCategories("#filter-pricelist","#pricing-gallery .grid-item-pricing"),placeFilterListeners(".grid-pricing"),$(".grid-pricing>.grid-item-pricing").removeClass("hover-off"),e()}).done(function(){console.log("All images of 'Pricing menu' successfully loaded")}).fail(function(){console.log(i+" of 'Pricing menu' images have broken links. Check your image paths.")}).progress(function(e,t){t.isLoaded||(i++,$(t.img).parent().remove())})}function instantiateIsotopeGallery(e,i){$(e).isotope(i)}function buildImgCategories(e,i){var t=$(i),o=$(e),r={};o.children().remove(),t.each(function(){var e=this,i=$(this).data("portfolio-tags");i&&i.split(",").forEach(function(i){i=i.trim(),null==r[i]&&(r[i]=[]),r[i].push(e)})}),o.addClass("filter-wrapper"),$("<li/>").appendTo(o),$("<a/>",{text:"V≈°e",class:"filter-item selected",click:function(){$(this).addClass("selected").parent().siblings().children().removeClass("selected")}}).appendTo(o.children().eq(0)).attr("data-lang","V≈°e"),$("<li><a class='filter-item filter-portfolio-divider'>&nbsp;</a></li>").appendTo(o),$.each(r,function(e){$("<li/>").appendTo(o),$("<a/>",{text:e,class:"filter-item",click:function(){$(this).addClass("selected").parent().siblings().children().removeClass("selected")}}).appendTo(o.children().last()).attr("data-lang",e)})}function placeFilterListeners(e){$(".filter-wrapper").on("click",".filter-item",function(){var i=$(this).data("lang");i===$($(".filter-item")[0]).data("lang")?$(e).isotope({filter:function(){return!0}}):$(e).isotope({filter:function(){return tagText=$(this).data("portfolioTags"),found=tagText.search(i),found>-1}})}),$(e+" .grid-item").on("click",function(i){i.preventDefault(),$(this).hasClass("grid-item-selected")?$(this).removeClass("grid-item-selected"):($(e+" .grid-item").removeClass("grid-item-selected"),$(this).addClass("grid-item-selected")),$(e).isotope("layout")})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
